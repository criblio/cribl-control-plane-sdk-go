// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpdateLookupFileCloneByIDRequest struct {
	// id
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// LookupCloneOpSchema object
	LookupCloneOpSchema components.LookupCloneOpSchema `request:"mediaType=application/json"`
}

func (o *UpdateLookupFileCloneByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateLookupFileCloneByIDRequest) GetLookupCloneOpSchema() components.LookupCloneOpSchema {
	if o == nil {
		return components.LookupCloneOpSchema{}
	}
	return o.LookupCloneOpSchema
}

// UpdateLookupFileCloneByIDResponseBody - a list of LookupFile objects
type UpdateLookupFileCloneByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                       `json:"count,omitempty"`
	Items []components.LookupFileUnion `json:"items,omitempty"`
}

func (o *UpdateLookupFileCloneByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdateLookupFileCloneByIDResponseBody) GetItems() []components.LookupFileUnion {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdateLookupFileCloneByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of LookupFile objects
	Object *UpdateLookupFileCloneByIDResponseBody
}

func (o *UpdateLookupFileCloneByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateLookupFileCloneByIDResponse) GetObject() *UpdateLookupFileCloneByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
