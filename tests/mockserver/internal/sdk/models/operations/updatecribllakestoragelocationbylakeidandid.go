// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpdateCriblLakeStorageLocationByLakeIDAndIDRequest struct {
	// lake id that contains the Storage Locations
	LakeID string `pathParam:"style=simple,explode=false,name=lakeId"`
	// storage location id to update
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// CriblLakeStorageLocation object
	CriblLakeStorageLocation components.CriblLakeStorageLocation `request:"mediaType=application/json"`
}

func (o *UpdateCriblLakeStorageLocationByLakeIDAndIDRequest) GetLakeID() string {
	if o == nil {
		return ""
	}
	return o.LakeID
}

func (o *UpdateCriblLakeStorageLocationByLakeIDAndIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateCriblLakeStorageLocationByLakeIDAndIDRequest) GetCriblLakeStorageLocation() components.CriblLakeStorageLocation {
	if o == nil {
		return components.CriblLakeStorageLocation{}
	}
	return o.CriblLakeStorageLocation
}

// UpdateCriblLakeStorageLocationByLakeIDAndIDResponseBody - a list of CriblLakeStorageLocation objects
type UpdateCriblLakeStorageLocationByLakeIDAndIDResponseBody struct {
	// number of items present in the items array
	Count *int64                                `json:"count,omitempty"`
	Items []components.CriblLakeStorageLocation `json:"items,omitempty"`
}

func (o *UpdateCriblLakeStorageLocationByLakeIDAndIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdateCriblLakeStorageLocationByLakeIDAndIDResponseBody) GetItems() []components.CriblLakeStorageLocation {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdateCriblLakeStorageLocationByLakeIDAndIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of CriblLakeStorageLocation objects
	Object *UpdateCriblLakeStorageLocationByLakeIDAndIDResponseBody
}

func (o *UpdateCriblLakeStorageLocationByLakeIDAndIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateCriblLakeStorageLocationByLakeIDAndIDResponse) GetObject() *UpdateCriblLakeStorageLocationByLakeIDAndIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
