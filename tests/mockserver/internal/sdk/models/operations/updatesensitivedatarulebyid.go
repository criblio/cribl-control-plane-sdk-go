// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpdateSensitiveDataRuleByIDRequest struct {
	// Unique ID to PATCH
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// SensitiveDataRule object to be updated
	SensitiveDataRule components.SensitiveDataRule `request:"mediaType=application/json"`
}

func (o *UpdateSensitiveDataRuleByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateSensitiveDataRuleByIDRequest) GetSensitiveDataRule() components.SensitiveDataRule {
	if o == nil {
		return components.SensitiveDataRule{}
	}
	return o.SensitiveDataRule
}

// UpdateSensitiveDataRuleByIDResponseBody - a list of SensitiveDataRule objects
type UpdateSensitiveDataRuleByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                         `json:"count,omitempty"`
	Items []components.SensitiveDataRule `json:"items,omitempty"`
}

func (o *UpdateSensitiveDataRuleByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdateSensitiveDataRuleByIDResponseBody) GetItems() []components.SensitiveDataRule {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdateSensitiveDataRuleByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of SensitiveDataRule objects
	Object *UpdateSensitiveDataRuleByIDResponseBody
}

func (o *UpdateSensitiveDataRuleByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateSensitiveDataRuleByIDResponse) GetObject() *UpdateSensitiveDataRuleByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
