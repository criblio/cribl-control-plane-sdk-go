// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetCriblLakeStorageLocationByLakeIDRequest struct {
	// lake id that contains the Storage Locations
	LakeID string `pathParam:"style=simple,explode=false,name=lakeId"`
}

func (o *GetCriblLakeStorageLocationByLakeIDRequest) GetLakeID() string {
	if o == nil {
		return ""
	}
	return o.LakeID
}

// GetCriblLakeStorageLocationByLakeIDResponseBody - a list of CriblLakeStorageLocation objects
type GetCriblLakeStorageLocationByLakeIDResponseBody struct {
	// number of items present in the items array
	Count *int64                                `json:"count,omitempty"`
	Items []components.CriblLakeStorageLocation `json:"items,omitempty"`
}

func (o *GetCriblLakeStorageLocationByLakeIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *GetCriblLakeStorageLocationByLakeIDResponseBody) GetItems() []components.CriblLakeStorageLocation {
	if o == nil {
		return nil
	}
	return o.Items
}

type GetCriblLakeStorageLocationByLakeIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of CriblLakeStorageLocation objects
	Object *GetCriblLakeStorageLocationByLakeIDResponseBody
}

func (o *GetCriblLakeStorageLocationByLakeIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetCriblLakeStorageLocationByLakeIDResponse) GetObject() *GetCriblLakeStorageLocationByLakeIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
