// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type UpdatePacksByIDRequest struct {
	// The <code>id</code> of the Pack to upgrade.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// PackUpgradeRequest object
	PackUpgradeRequest components.PackUpgradeRequest `request:"mediaType=application/json"`
}

func (u *UpdatePacksByIDRequest) GetID() string {
	if u == nil {
		return ""
	}
	return u.ID
}

func (u *UpdatePacksByIDRequest) GetPackUpgradeRequest() components.PackUpgradeRequest {
	if u == nil {
		return components.PackUpgradeRequest{}
	}
	return u.PackUpgradeRequest
}

// UpdatePacksByIDResponseBody - a list of PackInfo objects
type UpdatePacksByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                `json:"count,omitempty"`
	Items []components.PackInfo `json:"items,omitempty"`
}

func (u *UpdatePacksByIDResponseBody) GetCount() *int64 {
	if u == nil {
		return nil
	}
	return u.Count
}

func (u *UpdatePacksByIDResponseBody) GetItems() []components.PackInfo {
	if u == nil {
		return nil
	}
	return u.Items
}

type UpdatePacksByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of PackInfo objects
	Object *UpdatePacksByIDResponseBody
}

func (u *UpdatePacksByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if u == nil {
		return components.HTTPMetadata{}
	}
	return u.HTTPMeta
}

func (u *UpdatePacksByIDResponse) GetObject() *UpdatePacksByIDResponseBody {
	if u == nil {
		return nil
	}
	return u.Object
}
