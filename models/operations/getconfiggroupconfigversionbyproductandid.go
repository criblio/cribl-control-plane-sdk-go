// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type GetConfigGroupConfigVersionByProductAndIDRequest struct {
	// Name of the Cribl product to get the Worker Groups or Edge Fleets for.
	Product components.ProductsCore `pathParam:"style=simple,explode=false,name=product"`
	// The <code>id</code> of the Worker Group or Edge Fleet to get the configuration version for.
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *GetConfigGroupConfigVersionByProductAndIDRequest) GetProduct() components.ProductsCore {
	if o == nil {
		return components.ProductsCore("")
	}
	return o.Product
}

func (o *GetConfigGroupConfigVersionByProductAndIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// GetConfigGroupConfigVersionByProductAndIDResponseBody - a list of string objects
type GetConfigGroupConfigVersionByProductAndIDResponseBody struct {
	// number of items present in the items array
	Count *int64   `json:"count,omitempty"`
	Items []string `json:"items,omitempty"`
}

func (o *GetConfigGroupConfigVersionByProductAndIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *GetConfigGroupConfigVersionByProductAndIDResponseBody) GetItems() []string {
	if o == nil {
		return nil
	}
	return o.Items
}

type GetConfigGroupConfigVersionByProductAndIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of string objects
	Object *GetConfigGroupConfigVersionByProductAndIDResponseBody
}

func (o *GetConfigGroupConfigVersionByProductAndIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetConfigGroupConfigVersionByProductAndIDResponse) GetObject() *GetConfigGroupConfigVersionByProductAndIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
