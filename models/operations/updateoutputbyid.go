// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type UpdateOutputByIDRequest struct {
	// The <code>id</code> of the Destination to update.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Output object
	Output components.Output `request:"mediaType=application/json"`
}

func (u *UpdateOutputByIDRequest) GetID() string {
	if u == nil {
		return ""
	}
	return u.ID
}

func (u *UpdateOutputByIDRequest) GetOutput() components.Output {
	if u == nil {
		return components.Output{}
	}
	return u.Output
}

// UpdateOutputByIDResponseBody - a list of Destination objects
type UpdateOutputByIDResponseBody struct {
	// number of items present in the items array
	Count *int64              `json:"count,omitempty"`
	Items []components.Output `json:"items,omitempty"`
}

func (u *UpdateOutputByIDResponseBody) GetCount() *int64 {
	if u == nil {
		return nil
	}
	return u.Count
}

func (u *UpdateOutputByIDResponseBody) GetItems() []components.Output {
	if u == nil {
		return nil
	}
	return u.Items
}

type UpdateOutputByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of Destination objects
	Object *UpdateOutputByIDResponseBody
}

func (u *UpdateOutputByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if u == nil {
		return components.HTTPMetadata{}
	}
	return u.HTTPMeta
}

func (u *UpdateOutputByIDResponse) GetObject() *UpdateOutputByIDResponseBody {
	if u == nil {
		return nil
	}
	return u.Object
}
