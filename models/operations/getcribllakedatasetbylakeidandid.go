// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type GetCriblLakeDatasetByLakeIDAndIDRequest struct {
	// The <code>id</code> of the Lake that contains the Lake Dataset to get.
	LakeID string `pathParam:"style=simple,explode=false,name=lakeId"`
	// The <code>id</code> of the Lake Dataset to get.
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (g *GetCriblLakeDatasetByLakeIDAndIDRequest) GetLakeID() string {
	if g == nil {
		return ""
	}
	return g.LakeID
}

func (g *GetCriblLakeDatasetByLakeIDAndIDRequest) GetID() string {
	if g == nil {
		return ""
	}
	return g.ID
}

// GetCriblLakeDatasetByLakeIDAndIDResponseBody - a list of CriblLakeDataset objects
type GetCriblLakeDatasetByLakeIDAndIDResponseBody struct {
	// number of items present in the items array
	Count *int64                        `json:"count,omitempty"`
	Items []components.CriblLakeDataset `json:"items,omitempty"`
}

func (g *GetCriblLakeDatasetByLakeIDAndIDResponseBody) GetCount() *int64 {
	if g == nil {
		return nil
	}
	return g.Count
}

func (g *GetCriblLakeDatasetByLakeIDAndIDResponseBody) GetItems() []components.CriblLakeDataset {
	if g == nil {
		return nil
	}
	return g.Items
}

type GetCriblLakeDatasetByLakeIDAndIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of CriblLakeDataset objects
	Object *GetCriblLakeDatasetByLakeIDAndIDResponseBody
}

func (g *GetCriblLakeDatasetByLakeIDAndIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if g == nil {
		return components.HTTPMetadata{}
	}
	return g.HTTPMeta
}

func (g *GetCriblLakeDatasetByLakeIDAndIDResponse) GetObject() *GetCriblLakeDatasetByLakeIDAndIDResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}
