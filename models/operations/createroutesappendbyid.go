// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type CreateRoutesAppendByIDRequest struct {
	// The <code>id</code> of the Routing table to append the Route to. The supported value is <code>default</code>.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// RouteDefinitions object
	RequestBody []components.RouteConf `request:"mediaType=application/json"`
}

func (o *CreateRoutesAppendByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CreateRoutesAppendByIDRequest) GetRequestBody() []components.RouteConf {
	if o == nil {
		return []components.RouteConf{}
	}
	return o.RequestBody
}

// CreateRoutesAppendByIDResponseBody - a list of Routes objects
type CreateRoutesAppendByIDResponseBody struct {
	// number of items present in the items array
	Count *int64              `json:"count,omitempty"`
	Items []components.Routes `json:"items,omitempty"`
}

func (o *CreateRoutesAppendByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *CreateRoutesAppendByIDResponseBody) GetItems() []components.Routes {
	if o == nil {
		return nil
	}
	return o.Items
}

type CreateRoutesAppendByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of Routes objects
	Object *CreateRoutesAppendByIDResponseBody
}

func (o *CreateRoutesAppendByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateRoutesAppendByIDResponse) GetObject() *CreateRoutesAppendByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
