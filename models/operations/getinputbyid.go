// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type GetInputByIDRequest struct {
	// The <code>id</code> of the Source to get.
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (g *GetInputByIDRequest) GetID() string {
	if g == nil {
		return ""
	}
	return g.ID
}

// GetInputByIDResponseBody - a list of Source objects
type GetInputByIDResponseBody struct {
	// number of items present in the items array
	Count *int64             `json:"count,omitempty"`
	Items []components.Input `json:"items,omitempty"`
}

func (g *GetInputByIDResponseBody) GetCount() *int64 {
	if g == nil {
		return nil
	}
	return g.Count
}

func (g *GetInputByIDResponseBody) GetItems() []components.Input {
	if g == nil {
		return nil
	}
	return g.Items
}

type GetInputByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of Source objects
	Object *GetInputByIDResponseBody
}

func (g *GetInputByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if g == nil {
		return components.HTTPMetadata{}
	}
	return g.HTTPMeta
}

func (g *GetInputByIDResponse) GetObject() *GetInputByIDResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}
