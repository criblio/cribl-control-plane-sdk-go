// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type GetMasterWorkerEntryRequest struct {
	// Filter expression to evaluate against Nodes for inclusion in the response.
	FilterExp *string `queryParam:"style=form,explode=true,name=filterExp"`
}

func (g *GetMasterWorkerEntryRequest) GetFilterExp() *string {
	if g == nil {
		return nil
	}
	return g.FilterExp
}

// GetMasterWorkerEntryResponseBody - a list of number objects
type GetMasterWorkerEntryResponseBody struct {
	// number of items present in the items array
	Count *int64    `json:"count,omitempty"`
	Items []float64 `json:"items,omitempty"`
}

func (g *GetMasterWorkerEntryResponseBody) GetCount() *int64 {
	if g == nil {
		return nil
	}
	return g.Count
}

func (g *GetMasterWorkerEntryResponseBody) GetItems() []float64 {
	if g == nil {
		return nil
	}
	return g.Items
}

type GetMasterWorkerEntryResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of number objects
	Object *GetMasterWorkerEntryResponseBody
}

func (g *GetMasterWorkerEntryResponse) GetHTTPMeta() components.HTTPMetadata {
	if g == nil {
		return components.HTTPMetadata{}
	}
	return g.HTTPMeta
}

func (g *GetMasterWorkerEntryResponse) GetObject() *GetMasterWorkerEntryResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}
