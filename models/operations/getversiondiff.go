// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type GetVersionDiffRequest struct {
	// The Git commit hash to get the diff for.
	Commit *string `queryParam:"style=form,explode=true,name=commit"`
	// The <code>id</code> of the Worker Group or Edge Fleet to get the diff for.
	GroupID *string `queryParam:"style=form,explode=true,name=groupId"`
	// The relative path of the file to get the diff for.
	Filename *string `queryParam:"style=form,explode=true,name=filename"`
	// Number of lines of the diff to return. Default is 1000. Set to <code>0</code> to return the full diff, regardless of the number of lines.
	DiffLineLimit *float64 `queryParam:"style=form,explode=true,name=diffLineLimit"`
}

func (g *GetVersionDiffRequest) GetCommit() *string {
	if g == nil {
		return nil
	}
	return g.Commit
}

func (g *GetVersionDiffRequest) GetGroupID() *string {
	if g == nil {
		return nil
	}
	return g.GroupID
}

func (g *GetVersionDiffRequest) GetFilename() *string {
	if g == nil {
		return nil
	}
	return g.Filename
}

func (g *GetVersionDiffRequest) GetDiffLineLimit() *float64 {
	if g == nil {
		return nil
	}
	return g.DiffLineLimit
}

// GetVersionDiffResponseBody - a list of GitDiffResult objects
type GetVersionDiffResponseBody struct {
	// number of items present in the items array
	Count *int64                     `json:"count,omitempty"`
	Items []components.GitDiffResult `json:"items,omitempty"`
}

func (g *GetVersionDiffResponseBody) GetCount() *int64 {
	if g == nil {
		return nil
	}
	return g.Count
}

func (g *GetVersionDiffResponseBody) GetItems() []components.GitDiffResult {
	if g == nil {
		return nil
	}
	return g.Items
}

type GetVersionDiffResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of GitDiffResult objects
	Object *GetVersionDiffResponseBody
}

func (g *GetVersionDiffResponse) GetHTTPMeta() components.HTTPMetadata {
	if g == nil {
		return components.HTTPMetadata{}
	}
	return g.HTTPMeta
}

func (g *GetVersionDiffResponse) GetObject() *GetVersionDiffResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}
