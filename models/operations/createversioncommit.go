// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type CreateVersionCommitRequest struct {
	// The <code>id</code> of the Worker Group or Edge Fleet to create a new commit for.
	GroupID *string `queryParam:"style=form,explode=true,name=groupId"`
	// GitCommitParams object
	GitCommitParams components.GitCommitParams `request:"mediaType=application/json"`
}

func (c *CreateVersionCommitRequest) GetGroupID() *string {
	if c == nil {
		return nil
	}
	return c.GroupID
}

func (c *CreateVersionCommitRequest) GetGitCommitParams() components.GitCommitParams {
	if c == nil {
		return components.GitCommitParams{}
	}
	return c.GitCommitParams
}

// CreateVersionCommitResponseBody - a list of GitCommitSummary objects
type CreateVersionCommitResponseBody struct {
	// number of items present in the items array
	Count *int64                        `json:"count,omitempty"`
	Items []components.GitCommitSummary `json:"items,omitempty"`
}

func (c *CreateVersionCommitResponseBody) GetCount() *int64 {
	if c == nil {
		return nil
	}
	return c.Count
}

func (c *CreateVersionCommitResponseBody) GetItems() []components.GitCommitSummary {
	if c == nil {
		return nil
	}
	return c.Items
}

type CreateVersionCommitResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of GitCommitSummary objects
	Object *CreateVersionCommitResponseBody
}

func (c *CreateVersionCommitResponse) GetHTTPMeta() components.HTTPMetadata {
	if c == nil {
		return components.HTTPMetadata{}
	}
	return c.HTTPMeta
}

func (c *CreateVersionCommitResponse) GetObject() *CreateVersionCommitResponseBody {
	if c == nil {
		return nil
	}
	return c.Object
}
