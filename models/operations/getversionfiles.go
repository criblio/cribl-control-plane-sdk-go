// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type GetVersionFilesRequest struct {
	// The <code>id</code> of the Worker Group or Edge Fleet to get file names and status for.
	GroupID *string `queryParam:"style=form,explode=true,name=groupId"`
	// The Git commit hash to use as the starting point for the request.
	ID *string `queryParam:"style=form,explode=true,name=ID"`
}

func (g *GetVersionFilesRequest) GetGroupID() *string {
	if g == nil {
		return nil
	}
	return g.GroupID
}

func (g *GetVersionFilesRequest) GetID() *string {
	if g == nil {
		return nil
	}
	return g.ID
}

// GetVersionFilesResponseBody - a list of GitFilesResponse objects
type GetVersionFilesResponseBody struct {
	// number of items present in the items array
	Count *int64                        `json:"count,omitempty"`
	Items []components.GitFilesResponse `json:"items,omitempty"`
}

func (g *GetVersionFilesResponseBody) GetCount() *int64 {
	if g == nil {
		return nil
	}
	return g.Count
}

func (g *GetVersionFilesResponseBody) GetItems() []components.GitFilesResponse {
	if g == nil {
		return nil
	}
	return g.Items
}

type GetVersionFilesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of GitFilesResponse objects
	Object *GetVersionFilesResponseBody
}

func (g *GetVersionFilesResponse) GetHTTPMeta() components.HTTPMetadata {
	if g == nil {
		return components.HTTPMetadata{}
	}
	return g.HTTPMeta
}

func (g *GetVersionFilesResponse) GetObject() *GetVersionFilesResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}
