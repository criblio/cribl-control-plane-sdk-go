// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type CreateAdminProductsMappingsActivateByProductRequest struct {
	// Name of the Cribl product to activate the Mapping Ruleset for
	Product components.ProductsCore `pathParam:"style=simple,explode=false,name=product"`
	// RulesetId object
	RulesetID components.RulesetID `request:"mediaType=application/json"`
}

func (c *CreateAdminProductsMappingsActivateByProductRequest) GetProduct() components.ProductsCore {
	if c == nil {
		return components.ProductsCore("")
	}
	return c.Product
}

func (c *CreateAdminProductsMappingsActivateByProductRequest) GetRulesetID() components.RulesetID {
	if c == nil {
		return components.RulesetID{}
	}
	return c.RulesetID
}

// CreateAdminProductsMappingsActivateByProductResponseBody - The <code>id</code> of the Mapping Ruleset that has been successfully activated
type CreateAdminProductsMappingsActivateByProductResponseBody struct {
	// number of items present in the items array
	Count *int64                 `json:"count,omitempty"`
	Items []components.RulesetID `json:"items,omitempty"`
}

func (c *CreateAdminProductsMappingsActivateByProductResponseBody) GetCount() *int64 {
	if c == nil {
		return nil
	}
	return c.Count
}

func (c *CreateAdminProductsMappingsActivateByProductResponseBody) GetItems() []components.RulesetID {
	if c == nil {
		return nil
	}
	return c.Items
}

type CreateAdminProductsMappingsActivateByProductResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The <code>id</code> of the Mapping Ruleset that has been successfully activated
	Object *CreateAdminProductsMappingsActivateByProductResponseBody
}

func (c *CreateAdminProductsMappingsActivateByProductResponse) GetHTTPMeta() components.HTTPMetadata {
	if c == nil {
		return components.HTTPMetadata{}
	}
	return c.HTTPMeta
}

func (c *CreateAdminProductsMappingsActivateByProductResponse) GetObject() *CreateAdminProductsMappingsActivateByProductResponseBody {
	if c == nil {
		return nil
	}
	return c.Object
}
