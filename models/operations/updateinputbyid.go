// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type UpdateInputByIDRequest struct {
	// The <code>id</code> of the Source to update.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Input object
	Input components.Input `request:"mediaType=application/json"`
}

func (o *UpdateInputByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateInputByIDRequest) GetInput() components.Input {
	if o == nil {
		return components.Input{}
	}
	return o.Input
}

func (o *UpdateInputByIDRequest) GetInputCollection() *components.InputCollection {
	return o.GetInput().InputCollection
}

func (o *UpdateInputByIDRequest) GetInputKafka() *components.InputKafka {
	return o.GetInput().InputKafka
}

func (o *UpdateInputByIDRequest) GetInputMsk() *components.InputMsk {
	return o.GetInput().InputMsk
}

func (o *UpdateInputByIDRequest) GetInputHTTP() *components.InputHTTP {
	return o.GetInput().InputHTTP
}

func (o *UpdateInputByIDRequest) GetInputSplunk() *components.InputSplunk {
	return o.GetInput().InputSplunk
}

func (o *UpdateInputByIDRequest) GetInputSplunkSearch() *components.InputSplunkSearch {
	return o.GetInput().InputSplunkSearch
}

func (o *UpdateInputByIDRequest) GetInputSplunkHec() *components.InputSplunkHec {
	return o.GetInput().InputSplunkHec
}

func (o *UpdateInputByIDRequest) GetInputAzureBlob() *components.InputAzureBlob {
	return o.GetInput().InputAzureBlob
}

func (o *UpdateInputByIDRequest) GetInputElastic() *components.InputElastic {
	return o.GetInput().InputElastic
}

func (o *UpdateInputByIDRequest) GetInputConfluentCloud() *components.InputConfluentCloud {
	return o.GetInput().InputConfluentCloud
}

func (o *UpdateInputByIDRequest) GetInputGrafana() *components.InputGrafana {
	return o.GetInput().InputGrafana
}

func (o *UpdateInputByIDRequest) GetInputLoki() *components.InputLoki {
	return o.GetInput().InputLoki
}

func (o *UpdateInputByIDRequest) GetInputPrometheusRw() *components.InputPrometheusRw {
	return o.GetInput().InputPrometheusRw
}

func (o *UpdateInputByIDRequest) GetInputPrometheus() *components.InputPrometheus {
	return o.GetInput().InputPrometheus
}

func (o *UpdateInputByIDRequest) GetInputEdgePrometheus() *components.InputEdgePrometheus {
	return o.GetInput().InputEdgePrometheus
}

func (o *UpdateInputByIDRequest) GetInputOffice365Mgmt() *components.InputOffice365Mgmt {
	return o.GetInput().InputOffice365Mgmt
}

func (o *UpdateInputByIDRequest) GetInputOffice365Service() *components.InputOffice365Service {
	return o.GetInput().InputOffice365Service
}

func (o *UpdateInputByIDRequest) GetInputOffice365MsgTrace() *components.InputOffice365MsgTrace {
	return o.GetInput().InputOffice365MsgTrace
}

func (o *UpdateInputByIDRequest) GetInputEventhub() *components.InputEventhub {
	return o.GetInput().InputEventhub
}

func (o *UpdateInputByIDRequest) GetInputExec() *components.InputExec {
	return o.GetInput().InputExec
}

func (o *UpdateInputByIDRequest) GetInputFirehose() *components.InputFirehose {
	return o.GetInput().InputFirehose
}

func (o *UpdateInputByIDRequest) GetInputGooglePubsub() *components.InputGooglePubsub {
	return o.GetInput().InputGooglePubsub
}

func (o *UpdateInputByIDRequest) GetInputCribl() *components.InputCribl {
	return o.GetInput().InputCribl
}

func (o *UpdateInputByIDRequest) GetInputCriblTCP() *components.InputCriblTCP {
	return o.GetInput().InputCriblTCP
}

func (o *UpdateInputByIDRequest) GetInputCriblHTTP() *components.InputCriblHTTP {
	return o.GetInput().InputCriblHTTP
}

func (o *UpdateInputByIDRequest) GetInputCriblLakeHTTP() *components.InputCriblLakeHTTP {
	return o.GetInput().InputCriblLakeHTTP
}

func (o *UpdateInputByIDRequest) GetInputTcpjson() *components.InputTcpjson {
	return o.GetInput().InputTcpjson
}

func (o *UpdateInputByIDRequest) GetInputSystemMetrics() *components.InputSystemMetrics {
	return o.GetInput().InputSystemMetrics
}

func (o *UpdateInputByIDRequest) GetInputSystemState() *components.InputSystemState {
	return o.GetInput().InputSystemState
}

func (o *UpdateInputByIDRequest) GetInputKubeMetrics() *components.InputKubeMetrics {
	return o.GetInput().InputKubeMetrics
}

func (o *UpdateInputByIDRequest) GetInputKubeLogs() *components.InputKubeLogs {
	return o.GetInput().InputKubeLogs
}

func (o *UpdateInputByIDRequest) GetInputKubeEvents() *components.InputKubeEvents {
	return o.GetInput().InputKubeEvents
}

func (o *UpdateInputByIDRequest) GetInputWindowsMetrics() *components.InputWindowsMetrics {
	return o.GetInput().InputWindowsMetrics
}

func (o *UpdateInputByIDRequest) GetInputCrowdstrike() *components.InputCrowdstrike {
	return o.GetInput().InputCrowdstrike
}

func (o *UpdateInputByIDRequest) GetInputDatadogAgent() *components.InputDatadogAgent {
	return o.GetInput().InputDatadogAgent
}

func (o *UpdateInputByIDRequest) GetInputDatagen() *components.InputDatagen {
	return o.GetInput().InputDatagen
}

func (o *UpdateInputByIDRequest) GetInputHTTPRaw() *components.InputHTTPRaw {
	return o.GetInput().InputHTTPRaw
}

func (o *UpdateInputByIDRequest) GetInputKinesis() *components.InputKinesis {
	return o.GetInput().InputKinesis
}

func (o *UpdateInputByIDRequest) GetInputCriblmetrics() *components.InputCriblmetrics {
	return o.GetInput().InputCriblmetrics
}

func (o *UpdateInputByIDRequest) GetInputMetrics() *components.InputMetrics {
	return o.GetInput().InputMetrics
}

func (o *UpdateInputByIDRequest) GetInputS3() *components.InputS3 {
	return o.GetInput().InputS3
}

func (o *UpdateInputByIDRequest) GetInputS3Inventory() *components.InputS3Inventory {
	return o.GetInput().InputS3Inventory
}

func (o *UpdateInputByIDRequest) GetInputSnmp() *components.InputSnmp {
	return o.GetInput().InputSnmp
}

func (o *UpdateInputByIDRequest) GetInputOpenTelemetry() *components.InputOpenTelemetry {
	return o.GetInput().InputOpenTelemetry
}

func (o *UpdateInputByIDRequest) GetInputModelDrivenTelemetry() *components.InputModelDrivenTelemetry {
	return o.GetInput().InputModelDrivenTelemetry
}

func (o *UpdateInputByIDRequest) GetInputSqs() *components.InputSqs {
	return o.GetInput().InputSqs
}

func (o *UpdateInputByIDRequest) GetInputSyslog() *components.InputSyslog {
	return o.GetInput().InputSyslog
}

func (o *UpdateInputByIDRequest) GetInputFile() *components.InputFile {
	return o.GetInput().InputFile
}

func (o *UpdateInputByIDRequest) GetInputTCP() *components.InputTCP {
	return o.GetInput().InputTCP
}

func (o *UpdateInputByIDRequest) GetInputAppscope() *components.InputAppscope {
	return o.GetInput().InputAppscope
}

func (o *UpdateInputByIDRequest) GetInputWef() *components.InputWef {
	return o.GetInput().InputWef
}

func (o *UpdateInputByIDRequest) GetInputWinEventLogs() *components.InputWinEventLogs {
	return o.GetInput().InputWinEventLogs
}

func (o *UpdateInputByIDRequest) GetInputRawUDP() *components.InputRawUDP {
	return o.GetInput().InputRawUDP
}

func (o *UpdateInputByIDRequest) GetInputJournalFiles() *components.InputJournalFiles {
	return o.GetInput().InputJournalFiles
}

func (o *UpdateInputByIDRequest) GetInputWiz() *components.InputWiz {
	return o.GetInput().InputWiz
}

func (o *UpdateInputByIDRequest) GetInputNetflow() *components.InputNetflow {
	return o.GetInput().InputNetflow
}

func (o *UpdateInputByIDRequest) GetInputSecurityLake() *components.InputSecurityLake {
	return o.GetInput().InputSecurityLake
}

func (o *UpdateInputByIDRequest) GetInputZscalerHec() *components.InputZscalerHec {
	return o.GetInput().InputZscalerHec
}

// UpdateInputByIDResponseBody - a list of Source objects
type UpdateInputByIDResponseBody struct {
	// number of items present in the items array
	Count *int64             `json:"count,omitempty"`
	Items []components.Input `json:"items,omitempty"`
}

func (o *UpdateInputByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdateInputByIDResponseBody) GetItems() []components.Input {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdateInputByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of Source objects
	Object *UpdateInputByIDResponseBody
}

func (o *UpdateInputByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateInputByIDResponse) GetObject() *UpdateInputByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
