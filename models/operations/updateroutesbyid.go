// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type UpdateRoutesByIDRequest struct {
	// The <code>id</code> of the Routing table that contains the Route to update. The supported value is <code>default</code>.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Routes object
	Routes components.Routes `request:"mediaType=application/json"`
}

func (u *UpdateRoutesByIDRequest) GetID() string {
	if u == nil {
		return ""
	}
	return u.ID
}

func (u *UpdateRoutesByIDRequest) GetRoutes() components.Routes {
	if u == nil {
		return components.Routes{}
	}
	return u.Routes
}

// UpdateRoutesByIDResponseBody - a list of Routes objects
type UpdateRoutesByIDResponseBody struct {
	// number of items present in the items array
	Count *int64              `json:"count,omitempty"`
	Items []components.Routes `json:"items,omitempty"`
}

func (u *UpdateRoutesByIDResponseBody) GetCount() *int64 {
	if u == nil {
		return nil
	}
	return u.Count
}

func (u *UpdateRoutesByIDResponseBody) GetItems() []components.Routes {
	if u == nil {
		return nil
	}
	return u.Items
}

type UpdateRoutesByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of Routes objects
	Object *UpdateRoutesByIDResponseBody
}

func (u *UpdateRoutesByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if u == nil {
		return components.HTTPMetadata{}
	}
	return u.HTTPMeta
}

func (u *UpdateRoutesByIDResponse) GetObject() *UpdateRoutesByIDResponseBody {
	if u == nil {
		return nil
	}
	return u.Object
}
