// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type GetVersionRequest struct {
	// The <code>id</code> of the Worker Group or Edge Fleet to get the commit history for.
	GroupID *string `queryParam:"style=form,explode=true,name=groupId"`
	// Maximum number of commits to return in the response for this request.
	Count *float64 `queryParam:"style=form,explode=true,name=count"`
}

func (g *GetVersionRequest) GetGroupID() *string {
	if g == nil {
		return nil
	}
	return g.GroupID
}

func (g *GetVersionRequest) GetCount() *float64 {
	if g == nil {
		return nil
	}
	return g.Count
}

// GetVersionResponseBody - a list of GitLogResult objects
type GetVersionResponseBody struct {
	// number of items present in the items array
	Count *int64                    `json:"count,omitempty"`
	Items []components.GitLogResult `json:"items,omitempty"`
}

func (g *GetVersionResponseBody) GetCount() *int64 {
	if g == nil {
		return nil
	}
	return g.Count
}

func (g *GetVersionResponseBody) GetItems() []components.GitLogResult {
	if g == nil {
		return nil
	}
	return g.Items
}

type GetVersionResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of GitLogResult objects
	Object *GetVersionResponseBody
}

func (g *GetVersionResponse) GetHTTPMeta() components.HTTPMetadata {
	if g == nil {
		return components.HTTPMetadata{}
	}
	return g.HTTPMeta
}

func (g *GetVersionResponse) GetObject() *GetVersionResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}
