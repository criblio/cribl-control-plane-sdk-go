// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type DeletePipelineByIDRequest struct {
	// The <code>id</code> of the Pipeline to delete.
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (d *DeletePipelineByIDRequest) GetID() string {
	if d == nil {
		return ""
	}
	return d.ID
}

// DeletePipelineByIDResponseBody - a list of Pipeline objects
type DeletePipelineByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                `json:"count,omitempty"`
	Items []components.Pipeline `json:"items,omitempty"`
}

func (d *DeletePipelineByIDResponseBody) GetCount() *int64 {
	if d == nil {
		return nil
	}
	return d.Count
}

func (d *DeletePipelineByIDResponseBody) GetItems() []components.Pipeline {
	if d == nil {
		return nil
	}
	return d.Items
}

type DeletePipelineByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of Pipeline objects
	Object *DeletePipelineByIDResponseBody
}

func (d *DeletePipelineByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if d == nil {
		return components.HTTPMetadata{}
	}
	return d.HTTPMeta
}

func (d *DeletePipelineByIDResponse) GetObject() *DeletePipelineByIDResponseBody {
	if d == nil {
		return nil
	}
	return d.Object
}
