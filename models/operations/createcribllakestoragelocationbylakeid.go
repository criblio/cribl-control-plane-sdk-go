// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type CreateCriblLakeStorageLocationByLakeIDRequest struct {
	// lake id that contains the Storage Locations
	LakeID string `pathParam:"style=simple,explode=false,name=lakeId"`
	// CriblLakeStorageLocation object
	CriblLakeStorageLocation components.CriblLakeStorageLocation `request:"mediaType=application/json"`
}

func (o *CreateCriblLakeStorageLocationByLakeIDRequest) GetLakeID() string {
	if o == nil {
		return ""
	}
	return o.LakeID
}

func (o *CreateCriblLakeStorageLocationByLakeIDRequest) GetCriblLakeStorageLocation() components.CriblLakeStorageLocation {
	if o == nil {
		return components.CriblLakeStorageLocation{}
	}
	return o.CriblLakeStorageLocation
}

// CreateCriblLakeStorageLocationByLakeIDResponseBody - a list of CriblLakeStorageLocation objects
type CreateCriblLakeStorageLocationByLakeIDResponseBody struct {
	// number of items present in the items array
	Count *int64                                `json:"count,omitempty"`
	Items []components.CriblLakeStorageLocation `json:"items,omitempty"`
}

func (o *CreateCriblLakeStorageLocationByLakeIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *CreateCriblLakeStorageLocationByLakeIDResponseBody) GetItems() []components.CriblLakeStorageLocation {
	if o == nil {
		return nil
	}
	return o.Items
}

type CreateCriblLakeStorageLocationByLakeIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of CriblLakeStorageLocation objects
	Object *CreateCriblLakeStorageLocationByLakeIDResponseBody
}

func (o *CreateCriblLakeStorageLocationByLakeIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateCriblLakeStorageLocationByLakeIDResponse) GetObject() *CreateCriblLakeStorageLocationByLakeIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
