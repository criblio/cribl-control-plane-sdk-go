// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type GetPipelineByIDRequest struct {
	// The <code>id</code> of the Pipeline to get.
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (g *GetPipelineByIDRequest) GetID() string {
	if g == nil {
		return ""
	}
	return g.ID
}

// GetPipelineByIDResponseBody - a list of Pipeline objects
type GetPipelineByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                `json:"count,omitempty"`
	Items []components.Pipeline `json:"items,omitempty"`
}

func (g *GetPipelineByIDResponseBody) GetCount() *int64 {
	if g == nil {
		return nil
	}
	return g.Count
}

func (g *GetPipelineByIDResponseBody) GetItems() []components.Pipeline {
	if g == nil {
		return nil
	}
	return g.Items
}

type GetPipelineByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of Pipeline objects
	Object *GetPipelineByIDResponseBody
}

func (g *GetPipelineByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if g == nil {
		return components.HTTPMetadata{}
	}
	return g.HTTPMeta
}

func (g *GetPipelineByIDResponse) GetObject() *GetPipelineByIDResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}
