// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type GetCriblLakeStorageLocationByLakeIDAndIDRequest struct {
	// lake id that contains the Storage Locations
	LakeID string `pathParam:"style=simple,explode=false,name=lakeId"`
	// storage location id to get
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *GetCriblLakeStorageLocationByLakeIDAndIDRequest) GetLakeID() string {
	if o == nil {
		return ""
	}
	return o.LakeID
}

func (o *GetCriblLakeStorageLocationByLakeIDAndIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// GetCriblLakeStorageLocationByLakeIDAndIDResponseBody - a list of CriblLakeStorageLocation objects
type GetCriblLakeStorageLocationByLakeIDAndIDResponseBody struct {
	// number of items present in the items array
	Count *int64                                `json:"count,omitempty"`
	Items []components.CriblLakeStorageLocation `json:"items,omitempty"`
}

func (o *GetCriblLakeStorageLocationByLakeIDAndIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *GetCriblLakeStorageLocationByLakeIDAndIDResponseBody) GetItems() []components.CriblLakeStorageLocation {
	if o == nil {
		return nil
	}
	return o.Items
}

type GetCriblLakeStorageLocationByLakeIDAndIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of CriblLakeStorageLocation objects
	Object *GetCriblLakeStorageLocationByLakeIDAndIDResponseBody
}

func (o *GetCriblLakeStorageLocationByLakeIDAndIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetCriblLakeStorageLocationByLakeIDAndIDResponse) GetObject() *GetCriblLakeStorageLocationByLakeIDAndIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
