// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type UpdatePacksRequest struct {
	// Filename of the pack file to upload
	Filename string `queryParam:"style=form,explode=true,name=filename"`
	// Binary file content
	// This field accepts []byte data or io.Reader implementations, such as *os.File.
	RequestBody any `request:"mediaType=application/octet-stream"`
}

func (u *UpdatePacksRequest) GetFilename() string {
	if u == nil {
		return ""
	}
	return u.Filename
}

func (u *UpdatePacksRequest) GetRequestBody() any {
	if u == nil {
		return nil
	}
	return u.RequestBody
}

type UpdatePacksResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Pack file uploaded successfully
	UploadPackResponse *components.UploadPackResponse
}

func (u *UpdatePacksResponse) GetHTTPMeta() components.HTTPMetadata {
	if u == nil {
		return components.HTTPMetadata{}
	}
	return u.HTTPMeta
}

func (u *UpdatePacksResponse) GetUploadPackResponse() *components.UploadPackResponse {
	if u == nil {
		return nil
	}
	return u.UploadPackResponse
}
