// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type ListMasterWorkerEntryRequest struct {
	// Filter expression to evaluate against Nodes for inclusion in the response.
	FilterExp *string `queryParam:"style=form,explode=true,name=filterExp"`
	// Sorting expression to evaluate against Nodes to specify the sort order for the response.
	SortExp *string `queryParam:"style=form,explode=true,name=sortExp"`
	// JSON-stringified filter object to evaluate against Nodes for inclusion in the response.
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// JSON-stringified sorting object to evaluate against Nodes to specify the sort order for the response.
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
	// Maximum number of Nodes to return in the response for this request. Use with <code>offset</code> to paginate the response into manageable batches.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Starting point from which to retrieve results for this request. Use with <code>limit</code> to paginate the response into manageable batches.
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
}

func (o *ListMasterWorkerEntryRequest) GetFilterExp() *string {
	if o == nil {
		return nil
	}
	return o.FilterExp
}

func (o *ListMasterWorkerEntryRequest) GetSortExp() *string {
	if o == nil {
		return nil
	}
	return o.SortExp
}

func (o *ListMasterWorkerEntryRequest) GetFilter() *string {
	if o == nil {
		return nil
	}
	return o.Filter
}

func (o *ListMasterWorkerEntryRequest) GetSort() *string {
	if o == nil {
		return nil
	}
	return o.Sort
}

func (o *ListMasterWorkerEntryRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListMasterWorkerEntryRequest) GetOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

// ListMasterWorkerEntryResponseBody - a list of MasterWorkerEntry objects
type ListMasterWorkerEntryResponseBody struct {
	// number of items present in the items array
	Count *int64                         `json:"count,omitempty"`
	Items []components.MasterWorkerEntry `json:"items,omitempty"`
}

func (o *ListMasterWorkerEntryResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *ListMasterWorkerEntryResponseBody) GetItems() []components.MasterWorkerEntry {
	if o == nil {
		return nil
	}
	return o.Items
}

type ListMasterWorkerEntryResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of MasterWorkerEntry objects
	Object *ListMasterWorkerEntryResponseBody
}

func (o *ListMasterWorkerEntryResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListMasterWorkerEntryResponse) GetObject() *ListMasterWorkerEntryResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
