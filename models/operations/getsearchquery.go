// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
	"github.com/criblio/cribl-control-plane-sdk-go/types/jsonl"
)

type GetSearchQueryRequest struct {
	// Saved query ID
	QueryID *string `queryParam:"style=form,explode=true,name=queryId"`
	// Job ID
	JobID *string `queryParam:"style=form,explode=true,name=jobId"`
	// Search query string
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// Beginning of query time range, inclusive, in a relative time format or seconds
	Earliest *float64 `queryParam:"style=form,explode=true,name=earliest"`
	// End of query time range, exclusive, in a relative time format or seconds
	Latest *float64 `queryParam:"style=form,explode=true,name=latest"`
	// Number between 0-1 to sample events during search
	SampleRate *float64 `queryParam:"style=form,explode=true,name=sampleRate"`
	// When true, forces to run the scheduled query
	Force *bool `queryParam:"style=form,explode=true,name=force"`
	// Pagination offset
	Offset *float64 `queryParam:"style=form,explode=true,name=offset"`
	// Pagination limit - maximum number of events to return
	Limit *float64 `queryParam:"style=form,explode=true,name=limit"`
}

func (o *GetSearchQueryRequest) GetQueryID() *string {
	if o == nil {
		return nil
	}
	return o.QueryID
}

func (o *GetSearchQueryRequest) GetJobID() *string {
	if o == nil {
		return nil
	}
	return o.JobID
}

func (o *GetSearchQueryRequest) GetQuery() *string {
	if o == nil {
		return nil
	}
	return o.Query
}

func (o *GetSearchQueryRequest) GetEarliest() *float64 {
	if o == nil {
		return nil
	}
	return o.Earliest
}

func (o *GetSearchQueryRequest) GetLatest() *float64 {
	if o == nil {
		return nil
	}
	return o.Latest
}

func (o *GetSearchQueryRequest) GetSampleRate() *float64 {
	if o == nil {
		return nil
	}
	return o.SampleRate
}

func (o *GetSearchQueryRequest) GetForce() *bool {
	if o == nil {
		return nil
	}
	return o.Force
}

func (o *GetSearchQueryRequest) GetOffset() *float64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *GetSearchQueryRequest) GetLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

type GetSearchQueryResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// SearchResultsResults for the Search /results and /results-poll endpoints. object
	SearchJobResults *jsonl.JsonLStream[components.SearchJobResults]
}

func (o *GetSearchQueryResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetSearchQueryResponse) GetSearchJobResults() *jsonl.JsonLStream[components.SearchJobResults] {
	if o == nil {
		return nil
	}
	return o.SearchJobResults
}
