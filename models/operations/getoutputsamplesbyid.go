// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type GetOutputSamplesByIDRequest struct {
	// The <code>id</code> of the Destination to get sample event data for.
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (g *GetOutputSamplesByIDRequest) GetID() string {
	if g == nil {
		return ""
	}
	return g.ID
}

// GetOutputSamplesByIDResponseBody - a list of OutputSamplesResponse objects
type GetOutputSamplesByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                             `json:"count,omitempty"`
	Items []components.OutputSamplesResponse `json:"items,omitempty"`
}

func (g *GetOutputSamplesByIDResponseBody) GetCount() *int64 {
	if g == nil {
		return nil
	}
	return g.Count
}

func (g *GetOutputSamplesByIDResponseBody) GetItems() []components.OutputSamplesResponse {
	if g == nil {
		return nil
	}
	return g.Items
}

type GetOutputSamplesByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of OutputSamplesResponse objects
	Object *GetOutputSamplesByIDResponseBody
}

func (g *GetOutputSamplesByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if g == nil {
		return components.HTTPMetadata{}
	}
	return g.HTTPMeta
}

func (g *GetOutputSamplesByIDResponse) GetObject() *GetOutputSamplesByIDResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}
