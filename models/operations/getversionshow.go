// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type GetVersionShowRequest struct {
	// The Git commit hash to retrieve the diff and log message for.
	Commit *string `queryParam:"style=form,explode=true,name=commit"`
	// The <code>id</code> of the Worker Group or Edge Fleet to get the diff and log message for.
	GroupID *string `queryParam:"style=form,explode=true,name=groupId"`
	// The relative path of the file to get the diff and log message for.
	Filename *string `queryParam:"style=form,explode=true,name=filename"`
	// Number of lines of the diff to return. Default is 1000. Set to <code>0</code> to return the full diff, regardless of the number of lines.
	DiffLineLimit *float64 `queryParam:"style=form,explode=true,name=diffLineLimit"`
}

func (o *GetVersionShowRequest) GetCommit() *string {
	if o == nil {
		return nil
	}
	return o.Commit
}

func (o *GetVersionShowRequest) GetGroupID() *string {
	if o == nil {
		return nil
	}
	return o.GroupID
}

func (o *GetVersionShowRequest) GetFilename() *string {
	if o == nil {
		return nil
	}
	return o.Filename
}

func (o *GetVersionShowRequest) GetDiffLineLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.DiffLineLimit
}

// GetVersionShowResponseBody - a list of any objects
type GetVersionShowResponseBody struct {
	// number of items present in the items array
	Count *int64           `json:"count,omitempty"`
	Items []map[string]any `json:"items,omitempty"`
}

func (o *GetVersionShowResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *GetVersionShowResponseBody) GetItems() []map[string]any {
	if o == nil {
		return nil
	}
	return o.Items
}

type GetVersionShowResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of any objects
	Object *GetVersionShowResponseBody
}

func (o *GetVersionShowResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetVersionShowResponse) GetObject() *GetVersionShowResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
