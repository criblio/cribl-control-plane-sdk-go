// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type GetPacksRequest struct {
	// Comma-separated list of additional properties to include in the response. When set, the response includes a count of the specified properties in the Pack. Available values are <code>inputs</code> and <code>outputs</code>.
	With *string `queryParam:"style=form,explode=true,name=with"`
}

func (g *GetPacksRequest) GetWith() *string {
	if g == nil {
		return nil
	}
	return g.With
}

// GetPacksResponseBody - a list of PackInfo objects
type GetPacksResponseBody struct {
	// number of items present in the items array
	Count *int64                `json:"count,omitempty"`
	Items []components.PackInfo `json:"items,omitempty"`
}

func (g *GetPacksResponseBody) GetCount() *int64 {
	if g == nil {
		return nil
	}
	return g.Count
}

func (g *GetPacksResponseBody) GetItems() []components.PackInfo {
	if g == nil {
		return nil
	}
	return g.Items
}

type GetPacksResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of PackInfo objects
	Object *GetPacksResponseBody
}

func (g *GetPacksResponse) GetHTTPMeta() components.HTTPMetadata {
	if g == nil {
		return components.HTTPMetadata{}
	}
	return g.HTTPMeta
}

func (g *GetPacksResponse) GetObject() *GetPacksResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}
