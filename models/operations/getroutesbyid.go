// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type GetRoutesByIDRequest struct {
	// The <code>id</code> of the Routing table to get. The supported value is <code>default</code>.
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (g *GetRoutesByIDRequest) GetID() string {
	if g == nil {
		return ""
	}
	return g.ID
}

// GetRoutesByIDResponseBody - a list of Routes objects
type GetRoutesByIDResponseBody struct {
	// number of items present in the items array
	Count *int64              `json:"count,omitempty"`
	Items []components.Routes `json:"items,omitempty"`
}

func (g *GetRoutesByIDResponseBody) GetCount() *int64 {
	if g == nil {
		return nil
	}
	return g.Count
}

func (g *GetRoutesByIDResponseBody) GetItems() []components.Routes {
	if g == nil {
		return nil
	}
	return g.Items
}

type GetRoutesByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of Routes objects
	Object *GetRoutesByIDResponseBody
}

func (g *GetRoutesByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if g == nil {
		return components.HTTPMetadata{}
	}
	return g.HTTPMeta
}

func (g *GetRoutesByIDResponse) GetObject() *GetRoutesByIDResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}
