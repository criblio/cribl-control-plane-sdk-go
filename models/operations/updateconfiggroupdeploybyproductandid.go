// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type UpdateConfigGroupDeployByProductAndIDRequest struct {
	// Name of the Cribl product to get the Worker Groups or Edge Fleets for.
	Product components.ProductsCore `pathParam:"style=simple,explode=false,name=product"`
	// The <code>id</code> of the target Worker Group or Edge Fleet for commit deployment.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// DeployRequest object
	DeployRequest components.DeployRequest `request:"mediaType=application/json"`
}

func (u *UpdateConfigGroupDeployByProductAndIDRequest) GetProduct() components.ProductsCore {
	if u == nil {
		return components.ProductsCore("")
	}
	return u.Product
}

func (u *UpdateConfigGroupDeployByProductAndIDRequest) GetID() string {
	if u == nil {
		return ""
	}
	return u.ID
}

func (u *UpdateConfigGroupDeployByProductAndIDRequest) GetDeployRequest() components.DeployRequest {
	if u == nil {
		return components.DeployRequest{}
	}
	return u.DeployRequest
}

// UpdateConfigGroupDeployByProductAndIDResponseBody - a list of ConfigGroup objects
type UpdateConfigGroupDeployByProductAndIDResponseBody struct {
	// number of items present in the items array
	Count *int64                   `json:"count,omitempty"`
	Items []components.ConfigGroup `json:"items,omitempty"`
}

func (u *UpdateConfigGroupDeployByProductAndIDResponseBody) GetCount() *int64 {
	if u == nil {
		return nil
	}
	return u.Count
}

func (u *UpdateConfigGroupDeployByProductAndIDResponseBody) GetItems() []components.ConfigGroup {
	if u == nil {
		return nil
	}
	return u.Items
}

type UpdateConfigGroupDeployByProductAndIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of ConfigGroup objects
	Object *UpdateConfigGroupDeployByProductAndIDResponseBody
}

func (u *UpdateConfigGroupDeployByProductAndIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if u == nil {
		return components.HTTPMetadata{}
	}
	return u.HTTPMeta
}

func (u *UpdateConfigGroupDeployByProductAndIDResponse) GetObject() *UpdateConfigGroupDeployByProductAndIDResponseBody {
	if u == nil {
		return nil
	}
	return u.Object
}
