// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type CreateOutputTestByIDRequest struct {
	// The <code>id</code> of the Destination to send sample event data to.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// OutputTestRequest object
	OutputTestRequest components.OutputTestRequest `request:"mediaType=application/json"`
}

func (c *CreateOutputTestByIDRequest) GetID() string {
	if c == nil {
		return ""
	}
	return c.ID
}

func (c *CreateOutputTestByIDRequest) GetOutputTestRequest() components.OutputTestRequest {
	if c == nil {
		return components.OutputTestRequest{}
	}
	return c.OutputTestRequest
}

// CreateOutputTestByIDResponseBody - a list of OutputTestResponse objects
type CreateOutputTestByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                          `json:"count,omitempty"`
	Items []components.OutputTestResponse `json:"items,omitempty"`
}

func (c *CreateOutputTestByIDResponseBody) GetCount() *int64 {
	if c == nil {
		return nil
	}
	return c.Count
}

func (c *CreateOutputTestByIDResponseBody) GetItems() []components.OutputTestResponse {
	if c == nil {
		return nil
	}
	return c.Items
}

type CreateOutputTestByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of OutputTestResponse objects
	Object *CreateOutputTestByIDResponseBody
}

func (c *CreateOutputTestByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if c == nil {
		return components.HTTPMetadata{}
	}
	return c.HTTPMeta
}

func (c *CreateOutputTestByIDResponse) GetObject() *CreateOutputTestByIDResponseBody {
	if c == nil {
		return nil
	}
	return c.Object
}
