// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type UpdateAdminProductsMappingsByProductAndIDRequest struct {
	// Name of the Cribl product to update the Mapping Ruleset for
	Product components.ProductsCore `pathParam:"style=simple,explode=false,name=product"`
	// The <code>id</code> of the Mapping Ruleset to update.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// MappingRuleset object
	MappingRuleset components.MappingRuleset `request:"mediaType=application/json"`
}

func (u *UpdateAdminProductsMappingsByProductAndIDRequest) GetProduct() components.ProductsCore {
	if u == nil {
		return components.ProductsCore("")
	}
	return u.Product
}

func (u *UpdateAdminProductsMappingsByProductAndIDRequest) GetID() string {
	if u == nil {
		return ""
	}
	return u.ID
}

func (u *UpdateAdminProductsMappingsByProductAndIDRequest) GetMappingRuleset() components.MappingRuleset {
	if u == nil {
		return components.MappingRuleset{}
	}
	return u.MappingRuleset
}

// UpdateAdminProductsMappingsByProductAndIDResponseBody - A list containing the updated Mapping Ruleset objects
type UpdateAdminProductsMappingsByProductAndIDResponseBody struct {
	// number of items present in the items array
	Count *int64                      `json:"count,omitempty"`
	Items []components.MappingRuleset `json:"items,omitempty"`
}

func (u *UpdateAdminProductsMappingsByProductAndIDResponseBody) GetCount() *int64 {
	if u == nil {
		return nil
	}
	return u.Count
}

func (u *UpdateAdminProductsMappingsByProductAndIDResponseBody) GetItems() []components.MappingRuleset {
	if u == nil {
		return nil
	}
	return u.Items
}

type UpdateAdminProductsMappingsByProductAndIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list containing the updated Mapping Ruleset objects
	Object *UpdateAdminProductsMappingsByProductAndIDResponseBody
}

func (u *UpdateAdminProductsMappingsByProductAndIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if u == nil {
		return components.HTTPMetadata{}
	}
	return u.HTTPMeta
}

func (u *UpdateAdminProductsMappingsByProductAndIDResponse) GetObject() *UpdateAdminProductsMappingsByProductAndIDResponseBody {
	if u == nil {
		return nil
	}
	return u.Object
}
