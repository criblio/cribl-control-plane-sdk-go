// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type CreateInputHecTokenByIDRequest struct {
	// The <code>id</code> of the Splunk HEC Source.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// AddHecTokenRequest object
	AddHecTokenRequest components.AddHecTokenRequest `request:"mediaType=application/json"`
}

func (c *CreateInputHecTokenByIDRequest) GetID() string {
	if c == nil {
		return ""
	}
	return c.ID
}

func (c *CreateInputHecTokenByIDRequest) GetAddHecTokenRequest() components.AddHecTokenRequest {
	if c == nil {
		return components.AddHecTokenRequest{}
	}
	return c.AddHecTokenRequest
}

// CreateInputHecTokenByIDResponseBody - a list of any objects
type CreateInputHecTokenByIDResponseBody struct {
	// number of items present in the items array
	Count *int64           `json:"count,omitempty"`
	Items []map[string]any `json:"items,omitempty"`
}

func (c *CreateInputHecTokenByIDResponseBody) GetCount() *int64 {
	if c == nil {
		return nil
	}
	return c.Count
}

func (c *CreateInputHecTokenByIDResponseBody) GetItems() []map[string]any {
	if c == nil {
		return nil
	}
	return c.Items
}

type CreateInputHecTokenByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of any objects
	Object *CreateInputHecTokenByIDResponseBody
}

func (c *CreateInputHecTokenByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if c == nil {
		return components.HTTPMetadata{}
	}
	return c.HTTPMeta
}

func (c *CreateInputHecTokenByIDResponse) GetObject() *CreateInputHecTokenByIDResponseBody {
	if c == nil {
		return nil
	}
	return c.Object
}
