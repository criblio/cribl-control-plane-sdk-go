// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type DeleteAdminProductsMappingsByProductAndIDRequest struct {
	// Name of the Cribl product to delete the Mapping Ruleset for
	Product components.ProductsCore `pathParam:"style=simple,explode=false,name=product"`
	// The <code>id</code> of the Mapping Ruleset to delete.
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (d *DeleteAdminProductsMappingsByProductAndIDRequest) GetProduct() components.ProductsCore {
	if d == nil {
		return components.ProductsCore("")
	}
	return d.Product
}

func (d *DeleteAdminProductsMappingsByProductAndIDRequest) GetID() string {
	if d == nil {
		return ""
	}
	return d.ID
}

// DeleteAdminProductsMappingsByProductAndIDResponseBody - A list containing the deleted Mapping Ruleset objects
type DeleteAdminProductsMappingsByProductAndIDResponseBody struct {
	// number of items present in the items array
	Count *int64                      `json:"count,omitempty"`
	Items []components.MappingRuleset `json:"items,omitempty"`
}

func (d *DeleteAdminProductsMappingsByProductAndIDResponseBody) GetCount() *int64 {
	if d == nil {
		return nil
	}
	return d.Count
}

func (d *DeleteAdminProductsMappingsByProductAndIDResponseBody) GetItems() []components.MappingRuleset {
	if d == nil {
		return nil
	}
	return d.Items
}

type DeleteAdminProductsMappingsByProductAndIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list containing the deleted Mapping Ruleset objects
	Object *DeleteAdminProductsMappingsByProductAndIDResponseBody
}

func (d *DeleteAdminProductsMappingsByProductAndIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if d == nil {
		return components.HTTPMetadata{}
	}
	return d.HTTPMeta
}

func (d *DeleteAdminProductsMappingsByProductAndIDResponse) GetObject() *DeleteAdminProductsMappingsByProductAndIDResponseBody {
	if d == nil {
		return nil
	}
	return d.Object
}
