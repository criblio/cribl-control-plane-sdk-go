// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/cribl-control-plane-sdk-go/models/components"
)

type GetPacksByIDRequest struct {
	// The <code>id</code> of the Pack to get.
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *GetPacksByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// GetPacksByIDResponseBody - a list of PackInfo objects
type GetPacksByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                `json:"count,omitempty"`
	Items []components.PackInfo `json:"items,omitempty"`
}

func (o *GetPacksByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *GetPacksByIDResponseBody) GetItems() []components.PackInfo {
	if o == nil {
		return nil
	}
	return o.Items
}

type GetPacksByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of PackInfo objects
	Object *GetPacksByIDResponseBody
}

func (o *GetPacksByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetPacksByIDResponse) GetObject() *GetPacksByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
