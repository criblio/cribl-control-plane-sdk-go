// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type CriblLakeDatasetUpdateFormat string

const (
	CriblLakeDatasetUpdateFormatJSON    CriblLakeDatasetUpdateFormat = "json"
	CriblLakeDatasetUpdateFormatDdss    CriblLakeDatasetUpdateFormat = "ddss"
	CriblLakeDatasetUpdateFormatParquet CriblLakeDatasetUpdateFormat = "parquet"
)

func (e CriblLakeDatasetUpdateFormat) ToPointer() *CriblLakeDatasetUpdateFormat {
	return &e
}

type CriblLakeDatasetUpdate struct {
	AcceleratedFields     []string                      `json:"acceleratedFields,omitempty"`
	BucketName            *string                       `json:"bucketName,omitempty"`
	CacheConnection       *CacheConnection              `json:"cacheConnection,omitempty"`
	DeletionStartedAt     *float64                      `json:"deletionStartedAt,omitempty"`
	Description           *string                       `json:"description,omitempty"`
	Format                *CriblLakeDatasetUpdateFormat `json:"format,omitempty"`
	HTTPDAUsed            *bool                         `json:"httpDAUsed,omitempty"`
	ID                    *string                       `json:"id,omitempty"`
	RetentionPeriodInDays *float64                      `json:"retentionPeriodInDays,omitempty"`
	SearchConfig          *LakeDatasetSearchConfig      `json:"searchConfig,omitempty"`
	StorageLocationID     *string                       `json:"storageLocationId,omitempty"`
	ViewName              *string                       `json:"viewName,omitempty"`
}

func (c *CriblLakeDatasetUpdate) GetAcceleratedFields() []string {
	if c == nil {
		return nil
	}
	return c.AcceleratedFields
}

func (c *CriblLakeDatasetUpdate) GetBucketName() *string {
	if c == nil {
		return nil
	}
	return c.BucketName
}

func (c *CriblLakeDatasetUpdate) GetCacheConnection() *CacheConnection {
	if c == nil {
		return nil
	}
	return c.CacheConnection
}

func (c *CriblLakeDatasetUpdate) GetDeletionStartedAt() *float64 {
	if c == nil {
		return nil
	}
	return c.DeletionStartedAt
}

func (c *CriblLakeDatasetUpdate) GetDescription() *string {
	if c == nil {
		return nil
	}
	return c.Description
}

func (c *CriblLakeDatasetUpdate) GetFormat() *CriblLakeDatasetUpdateFormat {
	if c == nil {
		return nil
	}
	return c.Format
}

func (c *CriblLakeDatasetUpdate) GetHTTPDAUsed() *bool {
	if c == nil {
		return nil
	}
	return c.HTTPDAUsed
}

func (c *CriblLakeDatasetUpdate) GetID() *string {
	if c == nil {
		return nil
	}
	return c.ID
}

func (c *CriblLakeDatasetUpdate) GetRetentionPeriodInDays() *float64 {
	if c == nil {
		return nil
	}
	return c.RetentionPeriodInDays
}

func (c *CriblLakeDatasetUpdate) GetSearchConfig() *LakeDatasetSearchConfig {
	if c == nil {
		return nil
	}
	return c.SearchConfig
}

func (c *CriblLakeDatasetUpdate) GetStorageLocationID() *string {
	if c == nil {
		return nil
	}
	return c.StorageLocationID
}

func (c *CriblLakeDatasetUpdate) GetViewName() *string {
	if c == nil {
		return nil
	}
	return c.ViewName
}
