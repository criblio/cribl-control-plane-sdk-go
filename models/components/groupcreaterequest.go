// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// GroupCreateRequestEstimatedIngestRate - Maximum expected volume of data ingested by the @{group}. (This setting is available only on @{group}s consisting of Cribl-managed Cribl.Cloud @{node}s.)
type GroupCreateRequestEstimatedIngestRate int64

const (
	// GroupCreateRequestEstimatedIngestRateRate12MbPerSec 12 MB/sec
	GroupCreateRequestEstimatedIngestRateRate12MbPerSec GroupCreateRequestEstimatedIngestRate = 1024
	// GroupCreateRequestEstimatedIngestRateRate24MbPerSec 24 MB/sec
	GroupCreateRequestEstimatedIngestRateRate24MbPerSec GroupCreateRequestEstimatedIngestRate = 2048
	// GroupCreateRequestEstimatedIngestRateRate36MbPerSec 36 MB/sec
	GroupCreateRequestEstimatedIngestRateRate36MbPerSec GroupCreateRequestEstimatedIngestRate = 3072
	// GroupCreateRequestEstimatedIngestRateRate48MbPerSec 48 MB/sec
	GroupCreateRequestEstimatedIngestRateRate48MbPerSec GroupCreateRequestEstimatedIngestRate = 4096
	// GroupCreateRequestEstimatedIngestRateRate60MbPerSec 60 MB/sec
	GroupCreateRequestEstimatedIngestRateRate60MbPerSec GroupCreateRequestEstimatedIngestRate = 5120
	// GroupCreateRequestEstimatedIngestRateRate84MbPerSec 84 MB/sec
	GroupCreateRequestEstimatedIngestRateRate84MbPerSec GroupCreateRequestEstimatedIngestRate = 7168
	// GroupCreateRequestEstimatedIngestRateRate120MbPerSec 120 MB/sec
	GroupCreateRequestEstimatedIngestRateRate120MbPerSec GroupCreateRequestEstimatedIngestRate = 10240
	// GroupCreateRequestEstimatedIngestRateRate156MbPerSec 156 MB/sec
	GroupCreateRequestEstimatedIngestRateRate156MbPerSec GroupCreateRequestEstimatedIngestRate = 13312
	// GroupCreateRequestEstimatedIngestRateRate180MbPerSec 180 MB/sec
	GroupCreateRequestEstimatedIngestRateRate180MbPerSec GroupCreateRequestEstimatedIngestRate = 15360
)

func (e GroupCreateRequestEstimatedIngestRate) ToPointer() *GroupCreateRequestEstimatedIngestRate {
	return &e
}

type GroupCreateRequestGit struct {
	Commit       *string  `json:"commit,omitempty"`
	LocalChanges *float64 `json:"localChanges,omitempty"`
	Log          []Commit `json:"log,omitempty"`
}

func (g *GroupCreateRequestGit) GetCommit() *string {
	if g == nil {
		return nil
	}
	return g.Commit
}

func (g *GroupCreateRequestGit) GetLocalChanges() *float64 {
	if g == nil {
		return nil
	}
	return g.LocalChanges
}

func (g *GroupCreateRequestGit) GetLog() []Commit {
	if g == nil {
		return nil
	}
	return g.Log
}

type GroupCreateRequestType string

const (
	GroupCreateRequestTypeLakeAccess GroupCreateRequestType = "lake_access"
)

func (e GroupCreateRequestType) ToPointer() *GroupCreateRequestType {
	return &e
}

type GroupCreateRequest struct {
	Cloud                *ConfigGroupCloud `json:"cloud,omitempty"`
	DeployingWorkerCount *float64          `json:"deployingWorkerCount,omitempty"`
	Description          *string           `json:"description,omitempty"`
	// Maximum expected volume of data ingested by the @{group}. (This setting is available only on @{group}s consisting of Cribl-managed Cribl.Cloud @{node}s.)
	EstimatedIngestRate     *GroupCreateRequestEstimatedIngestRate `json:"estimatedIngestRate,omitempty"`
	Git                     *GroupCreateRequestGit                 `json:"git,omitempty"`
	ID                      string                                 `json:"id"`
	IncompatibleWorkerCount *float64                               `json:"incompatibleWorkerCount,omitempty"`
	Inherits                *string                                `json:"inherits,omitempty"`
	IsFleet                 *bool                                  `json:"isFleet,omitempty"`
	IsSearch                *bool                                  `json:"isSearch,omitempty"`
	LookupDeployments       []ConfigGroupLookups                   `json:"lookupDeployments,omitempty"`
	MaxWorkerAge            *string                                `json:"maxWorkerAge,omitempty"`
	Name                    *string                                `json:"name,omitempty"`
	OnPrem                  *bool                                  `json:"onPrem,omitempty"`
	Provisioned             *bool                                  `json:"provisioned,omitempty"`
	SourceGroupID           *string                                `json:"sourceGroupId,omitempty"`
	Streamtags              []string                               `json:"streamtags,omitempty"`
	Tags                    *string                                `json:"tags,omitempty"`
	Type                    *GroupCreateRequestType                `json:"type,omitempty"`
	UpgradeVersion          *string                                `json:"upgradeVersion,omitempty"`
	WorkerCount             *float64                               `json:"workerCount,omitempty"`
	WorkerRemoteAccess      *bool                                  `json:"workerRemoteAccess,omitempty"`
}

func (g *GroupCreateRequest) GetCloud() *ConfigGroupCloud {
	if g == nil {
		return nil
	}
	return g.Cloud
}

func (g *GroupCreateRequest) GetDeployingWorkerCount() *float64 {
	if g == nil {
		return nil
	}
	return g.DeployingWorkerCount
}

func (g *GroupCreateRequest) GetDescription() *string {
	if g == nil {
		return nil
	}
	return g.Description
}

func (g *GroupCreateRequest) GetEstimatedIngestRate() *GroupCreateRequestEstimatedIngestRate {
	if g == nil {
		return nil
	}
	return g.EstimatedIngestRate
}

func (g *GroupCreateRequest) GetGit() *GroupCreateRequestGit {
	if g == nil {
		return nil
	}
	return g.Git
}

func (g *GroupCreateRequest) GetID() string {
	if g == nil {
		return ""
	}
	return g.ID
}

func (g *GroupCreateRequest) GetIncompatibleWorkerCount() *float64 {
	if g == nil {
		return nil
	}
	return g.IncompatibleWorkerCount
}

func (g *GroupCreateRequest) GetInherits() *string {
	if g == nil {
		return nil
	}
	return g.Inherits
}

func (g *GroupCreateRequest) GetIsFleet() *bool {
	if g == nil {
		return nil
	}
	return g.IsFleet
}

func (g *GroupCreateRequest) GetIsSearch() *bool {
	if g == nil {
		return nil
	}
	return g.IsSearch
}

func (g *GroupCreateRequest) GetLookupDeployments() []ConfigGroupLookups {
	if g == nil {
		return nil
	}
	return g.LookupDeployments
}

func (g *GroupCreateRequest) GetMaxWorkerAge() *string {
	if g == nil {
		return nil
	}
	return g.MaxWorkerAge
}

func (g *GroupCreateRequest) GetName() *string {
	if g == nil {
		return nil
	}
	return g.Name
}

func (g *GroupCreateRequest) GetOnPrem() *bool {
	if g == nil {
		return nil
	}
	return g.OnPrem
}

func (g *GroupCreateRequest) GetProvisioned() *bool {
	if g == nil {
		return nil
	}
	return g.Provisioned
}

func (g *GroupCreateRequest) GetSourceGroupID() *string {
	if g == nil {
		return nil
	}
	return g.SourceGroupID
}

func (g *GroupCreateRequest) GetStreamtags() []string {
	if g == nil {
		return nil
	}
	return g.Streamtags
}

func (g *GroupCreateRequest) GetTags() *string {
	if g == nil {
		return nil
	}
	return g.Tags
}

func (g *GroupCreateRequest) GetType() *GroupCreateRequestType {
	if g == nil {
		return nil
	}
	return g.Type
}

func (g *GroupCreateRequest) GetUpgradeVersion() *string {
	if g == nil {
		return nil
	}
	return g.UpgradeVersion
}

func (g *GroupCreateRequest) GetWorkerCount() *float64 {
	if g == nil {
		return nil
	}
	return g.WorkerCount
}

func (g *GroupCreateRequest) GetWorkerRemoteAccess() *bool {
	if g == nil {
		return nil
	}
	return g.WorkerRemoteAccess
}
