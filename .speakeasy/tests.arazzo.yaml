arazzo: 1.0.1
info:
  title: Test Suite
  summary: Created from ./openapi.yml
  version: 0.0.1
sourceDescriptions:
  - name: ./openapi.yml
    url: https://TBD.com
    type: openapi
workflows:
  - workflowId: getHealthInfo
    steps:
      - stepId: test
        operationId: getHealthInfo
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "status": "standby",
                "startTime": 8399.98
              }
            type: simple
    x-speakeasy-test-group: diag
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemProjectsSubscriptionsByGroupIdByAndProjectId
    steps:
      - stepId: test
        operationId: getSystemProjectsSubscriptionsByGroupIdByAndProjectId
        parameters:
          - name: groupId
            in: path
            value: <id>
          - name: projectId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemProjectsVersionCountByGroupIdAndProjectId
    steps:
      - stepId: test
        operationId: getSystemProjectsVersionCountByGroupIdAndProjectId
        parameters:
          - name: groupId
            in: path
            value: <id>
          - name: projectId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemProjectsVersionDiffByGroupIdAndProjectId
    steps:
      - stepId: test
        operationId: getSystemProjectsVersionDiffByGroupIdAndProjectId
        parameters:
          - name: groupId
            in: path
            value: <id>
          - name: projectId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemProjectsVersionFilesByGroupIdAndProjectId
    steps:
      - stepId: test
        operationId: getSystemProjectsVersionFilesByGroupIdAndProjectId
        parameters:
          - name: groupId
            in: path
            value: <id>
          - name: projectId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: createSystemProjectsVersionCommitByGroupIdAndProjectId
    steps:
      - stepId: test
        operationId: createSystemProjectsVersionCommitByGroupIdAndProjectId
        parameters:
          - name: groupId
            in: path
            value: <id>
          - name: projectId
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            message: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: createSystemProjectsSubscriptionsCaptureByGroupIdAndSubscriptionId
    steps:
      - stepId: test
        operationId: createSystemProjectsSubscriptionsCaptureByGroupIdAndSubscriptionId
        parameters:
          - name: groupId
            in: path
            value: <id>
          - name: projectId
            in: path
            value: <id>
          - name: subscriptionId
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            duration: 9977.94
            filter: <value>
            level: "2"
            maxEvents: 5232.64
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: createSystemProjectsCaptureByGroupIdAndProjectId
    steps:
      - stepId: test
        operationId: createSystemProjectsCaptureByGroupIdAndProjectId
        parameters:
          - name: groupId
            in: path
            value: <id>
          - name: projectId
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            duration: 7020.88
            filter: <value>
            level: "1"
            maxEvents: 7103.16
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: createSystemProjectsPreviewByGroupIdAndProjectId
    steps:
      - stepId: test
        operationId: createSystemProjectsPreviewByGroupIdAndProjectId
        parameters:
          - name: groupId
            in: path
            value: <id>
          - name: projectId
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            mode: route
            pipelineId: <id>
            sampleId: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemProjectsPipelinesByGroupIdAndProjectId
    steps:
      - stepId: test
        operationId: getSystemProjectsPipelinesByGroupIdAndProjectId
        parameters:
          - name: groupId
            in: path
            value: <id>
          - name: projectId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: createSystemProjectsPipelinesByGroupIdAndProjectId
    steps:
      - stepId: test
        operationId: createSystemProjectsPipelinesByGroupIdAndProjectId
        parameters:
          - name: groupId
            in: path
            value: <id>
          - name: projectId
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            conf:
              output: default
            id: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemProjectsPipelinesByGroupIdAndProjectIdAndPipelineId
    steps:
      - stepId: test
        operationId: getSystemProjectsPipelinesByGroupIdAndProjectIdAndPipelineId
        parameters:
          - name: groupId
            in: path
            value: <id>
          - name: projectId
            in: path
            value: <id>
          - name: pipelineId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: updateSystemProjectsPipelinesByGroupIdAndProjectIdAndPipelineId
    steps:
      - stepId: test
        operationId: updateSystemProjectsPipelinesByGroupIdAndProjectIdAndPipelineId
        parameters:
          - name: groupId
            in: path
            value: <id>
          - name: projectId
            in: path
            value: <id>
          - name: pipelineId
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            conf:
              output: default
            id: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: deleteSystemProjectsPipelinesByGroupIdAndProjectIdAndPipelineId
    steps:
      - stepId: test
        operationId: deleteSystemProjectsPipelinesByGroupIdAndProjectIdAndPipelineId
        parameters:
          - name: groupId
            in: path
            value: <id>
          - name: projectId
            in: path
            value: <id>
          - name: pipelineId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: createSystemProjectsVersionCommitByProjectId
    steps:
      - stepId: test
        operationId: createSystemProjectsVersionCommitByProjectId
        parameters:
          - name: projectId
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            message: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemProjectsVersionCountByProjectId
    steps:
      - stepId: test
        operationId: getSystemProjectsVersionCountByProjectId
        parameters:
          - name: projectId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemProjectsVersionDiffByProjectId
    steps:
      - stepId: test
        operationId: getSystemProjectsVersionDiffByProjectId
        parameters:
          - name: projectId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemProjectsVersionFilesByProjectId
    steps:
      - stepId: test
        operationId: getSystemProjectsVersionFilesByProjectId
        parameters:
          - name: projectId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: createSystemProjectsVersionRevertByProjectId
    steps:
      - stepId: test
        operationId: createSystemProjectsVersionRevertByProjectId
        parameters:
          - name: projectId
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            message: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemProjectsVersionShowByProjectId
    steps:
      - stepId: test
        operationId: getSystemProjectsVersionShowByProjectId
        parameters:
          - name: projectId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: listProject
    steps:
      - stepId: test
        operationId: listProject
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: createProject
    steps:
      - stepId: test
        operationId: createProject
        requestBody:
          contentType: application/json
          payload:
            destinations:
              - <value 1>
              - <value 2>
              - <value 3>
            id: <id>
            subscriptions:
              - <value 1>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: getProjectById
    steps:
      - stepId: test
        operationId: getProjectById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: updateProjectById
    steps:
      - stepId: test
        operationId: updateProjectById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            destinations:
              - <value 1>
              - <value 2>
            id: <id>
            subscriptions:
              - <value 1>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: deleteProjectById
    steps:
      - stepId: test
        operationId: deleteProjectById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: getProjectAclById
    steps:
      - stepId: test
        operationId: getProjectAclById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: createProjectAclApplyById
    steps:
      - stepId: test
        operationId: createProjectAclApplyById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: getProjectAclTeamsById
    steps:
      - stepId: test
        operationId: getProjectAclTeamsById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: createProjectAclTeamsApplyById
    steps:
      - stepId: test
        operationId: createProjectAclTeamsApplyById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: getProjectDestinationsByProjectId
    steps:
      - stepId: test
        operationId: getProjectDestinationsByProjectId
        parameters:
          - name: projectId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: getSubscriptionByProjectId
    steps:
      - stepId: test
        operationId: getSubscriptionByProjectId
        parameters:
          - name: projectId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: projects
    x-speakeasy-test-rebuild: true
  - workflowId: listSubscription
    steps:
      - stepId: test
        operationId: listSubscription
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: subscriptions
    x-speakeasy-test-rebuild: true
  - workflowId: createSubscription
    steps:
      - stepId: test
        operationId: createSubscription
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: subscriptions
    x-speakeasy-test-rebuild: true
  - workflowId: getSubscriptionById
    steps:
      - stepId: test
        operationId: getSubscriptionById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: subscriptions
    x-speakeasy-test-rebuild: true
  - workflowId: updateSubscriptionById
    steps:
      - stepId: test
        operationId: updateSubscriptionById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: subscriptions
    x-speakeasy-test-rebuild: true
  - workflowId: deleteSubscriptionById
    steps:
      - stepId: test
        operationId: deleteSubscriptionById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: subscriptions
    x-speakeasy-test-rebuild: true
  - workflowId: undoLastCommit
    steps:
      - stepId: test
        operationId: undoLastCommit
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: versioning
    x-speakeasy-test-rebuild: true
  - workflowId: getVersionBranch
    steps:
      - stepId: test
        operationId: getVersionBranch
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: versioning
    x-speakeasy-test-rebuild: true
  - workflowId: createVersionCommit
    steps:
      - stepId: test
        operationId: createVersionCommit
        requestBody:
          contentType: application/json
          payload:
            message: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: versioning
    x-speakeasy-test-rebuild: true
  - workflowId: getVersionCount
    steps:
      - stepId: test
        operationId: getVersionCount
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: versioning
    x-speakeasy-test-rebuild: true
  - workflowId: getVersionCurrentBranch
    steps:
      - stepId: test
        operationId: getVersionCurrentBranch
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: versioning
    x-speakeasy-test-rebuild: true
  - workflowId: getVersionDiff
    steps:
      - stepId: test
        operationId: getVersionDiff
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: versioning
    x-speakeasy-test-rebuild: true
  - workflowId: getVersionFiles
    steps:
      - stepId: test
        operationId: getVersionFiles
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: versioning
    x-speakeasy-test-rebuild: true
  - workflowId: getVersionInfo
    steps:
      - stepId: test
        operationId: getVersionInfo
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: versioning
    x-speakeasy-test-rebuild: true
  - workflowId: createVersionPush
    steps:
      - stepId: test
        operationId: createVersionPush
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: versioning
    x-speakeasy-test-rebuild: true
  - workflowId: createVersionRevert
    steps:
      - stepId: test
        operationId: createVersionRevert
        requestBody:
          contentType: application/json
          payload:
            commit: <value>
            message: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: versioning
    x-speakeasy-test-rebuild: true
  - workflowId: getVersionShow
    steps:
      - stepId: test
        operationId: getVersionShow
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: versioning
    x-speakeasy-test-rebuild: true
  - workflowId: getVersionStatus
    steps:
      - stepId: test
        operationId: getVersionStatus
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: versioning
    x-speakeasy-test-rebuild: true
  - workflowId: createVersionSync
    steps:
      - stepId: test
        operationId: createVersionSync
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: versioning
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemSettingsGitSettings
    steps:
      - stepId: test
        operationId: getSystemSettingsGitSettings
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: git
    x-speakeasy-test-rebuild: true
  - workflowId: updateSystemSettingsGitSettings
    steps:
      - stepId: test
        operationId: updateSystemSettingsGitSettings
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: git
    x-speakeasy-test-rebuild: true
  - workflowId: createSystemCapture
    steps:
      - stepId: test
        operationId: createSystemCapture
        requestBody:
          contentType: application/json
          payload:
            duration: 5717.32
            filter: <value>
            level: "2"
            maxEvents: 9941.84
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: preview
    x-speakeasy-test-rebuild: true
  - workflowId: createSystemProjectsCaptureByProjectId
    steps:
      - stepId: test
        operationId: createSystemProjectsCaptureByProjectId
        parameters:
          - name: projectId
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            duration: 4855.02
            filter: <value>
            level: "3"
            maxEvents: 5475.12
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: preview
    x-speakeasy-test-rebuild: true
  - workflowId: createSystemProjectsSubscriptionsCaptureByProjectIdAndSubscriptionId
    steps:
      - stepId: test
        operationId: createSystemProjectsSubscriptionsCaptureByProjectIdAndSubscriptionId
        parameters:
          - name: projectId
            in: path
            value: <id>
          - name: subscriptionId
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            duration: 9984.14
            filter: <value>
            level: "3"
            maxEvents: 502.1
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: preview
    x-speakeasy-test-rebuild: true
  - workflowId: createPreview
    steps:
      - stepId: test
        operationId: createPreview
        requestBody:
          contentType: application/json
          payload:
            mode: pipe
            pipelineId: <id>
            sampleId: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: preview
    x-speakeasy-test-rebuild: true
  - workflowId: listDataSample
    steps:
      - stepId: test
        operationId: listDataSample
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: samples
    x-speakeasy-test-rebuild: true
  - workflowId: createDataSample
    steps:
      - stepId: test
        operationId: createDataSample
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            sampleName: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: samples
    x-speakeasy-test-rebuild: true
  - workflowId: getDataSampleById
    steps:
      - stepId: test
        operationId: getDataSampleById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: samples
    x-speakeasy-test-rebuild: true
  - workflowId: updateDataSampleById
    steps:
      - stepId: test
        operationId: updateDataSampleById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            sampleName: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: samples
    x-speakeasy-test-rebuild: true
  - workflowId: deleteDataSampleById
    steps:
      - stepId: test
        operationId: deleteDataSampleById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: samples
    x-speakeasy-test-rebuild: true
  - workflowId: getDataSampleContentById
    steps:
      - stepId: test
        operationId: getDataSampleContentById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: samples
    x-speakeasy-test-rebuild: true
  - workflowId: listPipeline
    steps:
      - stepId: test
        operationId: listPipeline
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: pipelines
    x-speakeasy-test-rebuild: true
  - workflowId: createPipeline
    steps:
      - stepId: test
        operationId: createPipeline
        requestBody:
          contentType: application/json
          payload:
            conf:
              output: default
            id: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: pipelines
    x-speakeasy-test-rebuild: true
  - workflowId: getPipelineById
    steps:
      - stepId: test
        operationId: getPipelineById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: pipelines
    x-speakeasy-test-rebuild: true
  - workflowId: updatePipelineById
    steps:
      - stepId: test
        operationId: updatePipelineById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            conf:
              output: default
            id: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: pipelines
    x-speakeasy-test-rebuild: true
  - workflowId: deletePipelineById
    steps:
      - stepId: test
        operationId: deletePipelineById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: pipelines
    x-speakeasy-test-rebuild: true
  - workflowId: getPipelineByPack
    steps:
      - stepId: test
        operationId: getPipelineByPack
        parameters:
          - name: pack
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: pipelines
    x-speakeasy-test-rebuild: true
  - workflowId: createPipelineByPack
    steps:
      - stepId: test
        operationId: createPipelineByPack
        parameters:
          - name: pack
            in: path
            value: <value>
        requestBody:
          contentType: application/json
          payload:
            conf:
              output: default
            id: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: pipelines
    x-speakeasy-test-rebuild: true
  - workflowId: getPipelineByPackAndId
    steps:
      - stepId: test
        operationId: getPipelineByPackAndId
        parameters:
          - name: id
            in: path
            value: <id>
          - name: pack
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: pipelines
    x-speakeasy-test-rebuild: true
  - workflowId: updatePipelineByPackAndId
    steps:
      - stepId: test
        operationId: updatePipelineByPackAndId
        parameters:
          - name: id
            in: path
            value: <id>
          - name: pack
            in: path
            value: <value>
        requestBody:
          contentType: application/json
          payload:
            conf:
              output: default
            id: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: pipelines
    x-speakeasy-test-rebuild: true
  - workflowId: deletePipelineByPackAndId
    steps:
      - stepId: test
        operationId: deletePipelineByPackAndId
        parameters:
          - name: id
            in: path
            value: <id>
          - name: pack
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: pipelines
    x-speakeasy-test-rebuild: true
  - workflowId: listBannerMessage
    steps:
      - stepId: test
        operationId: listBannerMessage
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: banners
    x-speakeasy-test-rebuild: true
  - workflowId: createBannerMessage
    steps:
      - stepId: test
        operationId: createBannerMessage
        requestBody:
          contentType: application/json
          payload:
            enabled: true
            message: <value>
            theme: <value>
            type: system
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: banners
    x-speakeasy-test-rebuild: true
  - workflowId: getBannerMessageById
    steps:
      - stepId: test
        operationId: getBannerMessageById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: banners
    x-speakeasy-test-rebuild: true
  - workflowId: updateBannerMessageById
    steps:
      - stepId: test
        operationId: updateBannerMessageById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            enabled: true
            message: <value>
            theme: <value>
            type: custom
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: banners
    x-speakeasy-test-rebuild: true
  - workflowId: deleteBannerMessageById
    steps:
      - stepId: test
        operationId: deleteBannerMessageById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: banners
    x-speakeasy-test-rebuild: true
  - workflowId: listCertificate
    steps:
      - stepId: test
        operationId: listCertificate
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: certificates
    x-speakeasy-test-rebuild: true
  - workflowId: createCertificate
    steps:
      - stepId: test
        operationId: createCertificate
        requestBody:
          contentType: application/json
          payload:
            cert: <value>
            id: <id>
            privKey: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: certificates
    x-speakeasy-test-rebuild: true
  - workflowId: getCertificateById
    steps:
      - stepId: test
        operationId: getCertificateById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: certificates
    x-speakeasy-test-rebuild: true
  - workflowId: updateCertificateById
    steps:
      - stepId: test
        operationId: updateCertificateById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            cert: <value>
            id: <id>
            privKey: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: certificates
    x-speakeasy-test-rebuild: true
  - workflowId: deleteCertificateById
    steps:
      - stepId: test
        operationId: deleteCertificateById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: certificates
    x-speakeasy-test-rebuild: true
  - workflowId: getFeaturesEntryById
    steps:
      - stepId: test
        operationId: getFeaturesEntryById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: features
    x-speakeasy-test-rebuild: true
  - workflowId: getFeaturesEntry
    steps:
      - stepId: test
        operationId: getFeaturesEntry
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: features
    x-speakeasy-test-rebuild: true
  - workflowId: listSavedJob
    steps:
      - stepId: test
        operationId: listSavedJob
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: saved-jobs
    x-speakeasy-test-rebuild: true
  - workflowId: createSavedJob
    steps:
      - stepId: test
        operationId: createSavedJob
        requestBody:
          contentType: application/json
          payload:
            collector:
              conf: {}
              destructive: false
              type: <value>
            ignoreGroupJobsLimit: false
            resumeOnBoot: false
            ttl: 4h
            type: collection
            workerAffinity: false
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: saved-jobs
    x-speakeasy-test-rebuild: true
  - workflowId: getSavedJobById
    steps:
      - stepId: test
        operationId: getSavedJobById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: saved-jobs
    x-speakeasy-test-rebuild: true
  - workflowId: updateSavedJobById
    steps:
      - stepId: test
        operationId: updateSavedJobById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            collector:
              conf: {}
              destructive: false
              type: <value>
            ignoreGroupJobsLimit: false
            resumeOnBoot: false
            ttl: 4h
            type: collection
            workerAffinity: false
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: saved-jobs
    x-speakeasy-test-rebuild: true
  - workflowId: deleteSavedJobById
    steps:
      - stepId: test
        operationId: deleteSavedJobById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: saved-jobs
    x-speakeasy-test-rebuild: true
  - workflowId: listKeyMetadataEntity
    steps:
      - stepId: test
        operationId: listKeyMetadataEntity
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: keys
    x-speakeasy-test-rebuild: true
  - workflowId: createKeyMetadataEntity
    steps:
      - stepId: test
        operationId: createKeyMetadataEntity
        requestBody:
          contentType: application/json
          payload:
            algorithm: aes-256-cbc
            ivSize: 12
            keyId: <id>
            keyclass: 0
            kms: local
            useIV: false
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: keys
    x-speakeasy-test-rebuild: true
  - workflowId: getKeyMetadataEntityById
    steps:
      - stepId: test
        operationId: getKeyMetadataEntityById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: keys
    x-speakeasy-test-rebuild: true
  - workflowId: updateKeyMetadataEntityById
    steps:
      - stepId: test
        operationId: updateKeyMetadataEntityById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            algorithm: aes-256-cbc
            ivSize: 12
            keyId: <id>
            keyclass: 0
            kms: local
            useIV: false
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: keys
    x-speakeasy-test-rebuild: true
  - workflowId: deleteKeyMetadataEntityById
    steps:
      - stepId: test
        operationId: deleteKeyMetadataEntityById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: keys
    x-speakeasy-test-rebuild: true
  - workflowId: listBulletinMessage
    steps:
      - stepId: test
        operationId: listBulletinMessage
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: messages
    x-speakeasy-test-rebuild: true
  - workflowId: createBulletinMessage
    steps:
      - stepId: test
        operationId: createBulletinMessage
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            text: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: messages
    x-speakeasy-test-rebuild: true
  - workflowId: getBulletinMessageById
    steps:
      - stepId: test
        operationId: getBulletinMessageById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: messages
    x-speakeasy-test-rebuild: true
  - workflowId: deleteBulletinMessageById
    steps:
      - stepId: test
        operationId: deleteBulletinMessageById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: messages
    x-speakeasy-test-rebuild: true
  - workflowId: listNotificationTarget
    steps:
      - stepId: test
        operationId: listNotificationTarget
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: notification-targets
    x-speakeasy-test-rebuild: true
  - workflowId: createNotificationTarget
    steps:
      - stepId: test
        operationId: createNotificationTarget
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            type: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: notification-targets
    x-speakeasy-test-rebuild: true
  - workflowId: getNotificationTargetById
    steps:
      - stepId: test
        operationId: getNotificationTargetById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: notification-targets
    x-speakeasy-test-rebuild: true
  - workflowId: updateNotificationTargetById
    steps:
      - stepId: test
        operationId: updateNotificationTargetById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            type: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: notification-targets
    x-speakeasy-test-rebuild: true
  - workflowId: deleteNotificationTargetById
    steps:
      - stepId: test
        operationId: deleteNotificationTargetById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: notification-targets
    x-speakeasy-test-rebuild: true
  - workflowId: listNotification
    steps:
      - stepId: test
        operationId: listNotification
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: notifications
    x-speakeasy-test-rebuild: true
  - workflowId: createNotification
    steps:
      - stepId: test
        operationId: createNotification
        requestBody:
          contentType: application/json
          payload:
            condition: <value>
            disabled: false
            id: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: notifications
    x-speakeasy-test-rebuild: true
  - workflowId: getNotificationById
    steps:
      - stepId: test
        operationId: getNotificationById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: notifications
    x-speakeasy-test-rebuild: true
  - workflowId: updateNotificationById
    steps:
      - stepId: test
        operationId: updateNotificationById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            condition: <value>
            disabled: false
            id: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: notifications
    x-speakeasy-test-rebuild: true
  - workflowId: deleteNotificationById
    steps:
      - stepId: test
        operationId: deleteNotificationById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: notifications
    x-speakeasy-test-rebuild: true
  - workflowId: listPolicyRule
    steps:
      - stepId: test
        operationId: listPolicyRule
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: policies
    x-speakeasy-test-rebuild: true
  - workflowId: createPolicyRule
    steps:
      - stepId: test
        operationId: createPolicyRule
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            template: []
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: policies
    x-speakeasy-test-rebuild: true
  - workflowId: getPolicyRuleById
    steps:
      - stepId: test
        operationId: getPolicyRuleById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: policies
    x-speakeasy-test-rebuild: true
  - workflowId: updatePolicyRuleById
    steps:
      - stepId: test
        operationId: updatePolicyRuleById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            template:
              - <value 1>
              - <value 2>
              - <value 3>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: policies
    x-speakeasy-test-rebuild: true
  - workflowId: deletePolicyRuleById
    steps:
      - stepId: test
        operationId: deletePolicyRuleById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: policies
    x-speakeasy-test-rebuild: true
  - workflowId: listRole
    steps:
      - stepId: test
        operationId: listRole
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: roles
    x-speakeasy-test-rebuild: true
  - workflowId: createRole
    steps:
      - stepId: test
        operationId: createRole
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            policy: []
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: roles
    x-speakeasy-test-rebuild: true
  - workflowId: getRoleById
    steps:
      - stepId: test
        operationId: getRoleById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: roles
    x-speakeasy-test-rebuild: true
  - workflowId: updateRoleById
    steps:
      - stepId: test
        operationId: updateRoleById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            policy:
              - <value 1>
              - <value 2>
              - <value 3>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: roles
    x-speakeasy-test-rebuild: true
  - workflowId: deleteRoleById
    steps:
      - stepId: test
        operationId: deleteRoleById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: roles
    x-speakeasy-test-rebuild: true
  - workflowId: listScript
    steps:
      - stepId: test
        operationId: listScript
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: scripts
    x-speakeasy-test-rebuild: true
  - workflowId: createScript
    steps:
      - stepId: test
        operationId: createScript
        requestBody:
          contentType: application/json
          payload:
            command: <value>
            id: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: scripts
    x-speakeasy-test-rebuild: true
  - workflowId: getScriptById
    steps:
      - stepId: test
        operationId: getScriptById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: scripts
    x-speakeasy-test-rebuild: true
  - workflowId: updateScriptById
    steps:
      - stepId: test
        operationId: updateScriptById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            command: <value>
            id: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: scripts
    x-speakeasy-test-rebuild: true
  - workflowId: deleteScriptById
    steps:
      - stepId: test
        operationId: deleteScriptById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: scripts
    x-speakeasy-test-rebuild: true
  - workflowId: createTeam
    steps:
      - stepId: test
        operationId: createTeam
        requestBody:
          contentType: application/json
          payload:
            description: once well-lit rigid anti
            id: <id>
            name: <value>
            roles:
              - <value 1>
              - <value 2>
              - <value 3>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: teams
    x-speakeasy-test-rebuild: true
  - workflowId: getTeam
    steps:
      - stepId: test
        operationId: getTeam
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: teams
    x-speakeasy-test-rebuild: true
  - workflowId: getTeamById
    steps:
      - stepId: test
        operationId: getTeamById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: teams
    x-speakeasy-test-rebuild: true
  - workflowId: updateTeamById
    steps:
      - stepId: test
        operationId: updateTeamById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            description: vibration below but once whoever and
            id: <id>
            name: <value>
            roles:
              - <value 1>
              - <value 2>
              - <value 3>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: teams
    x-speakeasy-test-rebuild: true
  - workflowId: deleteTeamById
    steps:
      - stepId: test
        operationId: deleteTeamById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: teams
    x-speakeasy-test-rebuild: true
  - workflowId: getTeamAclById
    steps:
      - stepId: test
        operationId: getTeamAclById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: teams
    x-speakeasy-test-rebuild: true
  - workflowId: getTeamRolesById
    steps:
      - stepId: test
        operationId: getTeamRolesById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: teams
    x-speakeasy-test-rebuild: true
  - workflowId: getTeamUsersById
    steps:
      - stepId: test
        operationId: getTeamUsersById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: teams
    x-speakeasy-test-rebuild: true
  - workflowId: createTeamUsersById
    steps:
      - stepId: test
        operationId: createTeamUsersById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: teams
    x-speakeasy-test-rebuild: true
  - workflowId: getProductsGroupsAclTeamsByProductAndId
    steps:
      - stepId: test
        operationId: getProductsGroupsAclTeamsByProductAndId
        parameters:
          - name: product
            in: path
            value: stream
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: teams
    x-speakeasy-test-rebuild: true
  - workflowId: listUser
    steps:
      - stepId: test
        operationId: listUser
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: users
    x-speakeasy-test-rebuild: true
  - workflowId: createUser
    steps:
      - stepId: test
        operationId: createUser
        requestBody:
          contentType: application/json
          payload:
            disabled: true
            email: Aliya_Gorczany97@gmail.com
            first: <value>
            id: <id>
            last: <value>
            username: Virginie47
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: users
    x-speakeasy-test-rebuild: true
  - workflowId: getUserById
    steps:
      - stepId: test
        operationId: getUserById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: users
    x-speakeasy-test-rebuild: true
  - workflowId: updateUserById
    steps:
      - stepId: test
        operationId: updateUserById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            disabled: false
            email: Gladys_Kohler@hotmail.com
            first: <value>
            id: <id>
            last: <value>
            username: Deondre.Hilll
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: users
    x-speakeasy-test-rebuild: true
  - workflowId: deleteUserById
    steps:
      - stepId: test
        operationId: deleteUserById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: users
    x-speakeasy-test-rebuild: true
  - workflowId: updateUserInfoById
    steps:
      - stepId: test
        operationId: updateUserInfoById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            disabled: false
            email: Devan_Aufderhar@yahoo.com
            first: <value>
            id: <id>
            last: <value>
            username: Eliane85
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: users
    x-speakeasy-test-rebuild: true
  - workflowId: getProductsUsersAclByProductAndId
    steps:
      - stepId: test
        operationId: getProductsUsersAclByProductAndId
        parameters:
          - name: product
            in: path
            value: edge
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: users
    x-speakeasy-test-rebuild: true
  - workflowId: getProductsUsersByProduct
    steps:
      - stepId: test
        operationId: getProductsUsersByProduct
        parameters:
          - name: product
            in: path
            value: stream
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: users
    x-speakeasy-test-rebuild: true
  - workflowId: deleteProductsUsersCacheByProduct
    steps:
      - stepId: test
        operationId: deleteProductsUsersCacheByProduct
        parameters:
          - name: product
            in: path
            value: lake
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: users
    x-speakeasy-test-rebuild: true
  - workflowId: createCriblLakeDatasetByLakeId
    steps:
      - stepId: test
        operationId: createCriblLakeDatasetByLakeId
        parameters:
          - name: lakeId
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            bucketName: <value>
            id: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: lake
    x-speakeasy-test-rebuild: true
  - workflowId: getCriblLakeDatasetByLakeId
    steps:
      - stepId: test
        operationId: getCriblLakeDatasetByLakeId
        parameters:
          - name: lakeId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: lake
    x-speakeasy-test-rebuild: true
  - workflowId: deleteCriblLakeDatasetByLakeIdAndId
    steps:
      - stepId: test
        operationId: deleteCriblLakeDatasetByLakeIdAndId
        parameters:
          - name: lakeId
            in: path
            value: <id>
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: lake
    x-speakeasy-test-rebuild: true
  - workflowId: getCriblLakeDatasetByLakeIdAndId
    steps:
      - stepId: test
        operationId: getCriblLakeDatasetByLakeIdAndId
        parameters:
          - name: lakeId
            in: path
            value: <id>
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: lake
    x-speakeasy-test-rebuild: true
  - workflowId: updateCriblLakeDatasetByLakeIdAndId
    steps:
      - stepId: test
        operationId: updateCriblLakeDatasetByLakeIdAndId
        parameters:
          - name: lakeId
            in: path
            value: <id>
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            bucketName: <value>
            id: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: lake
    x-speakeasy-test-rebuild: true
  - workflowId: createCriblLakeStorageLocationByLakeId
    steps:
      - stepId: test
        operationId: createCriblLakeStorageLocationByLakeId
        parameters:
          - name: lakeId
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            config:
              bucketName: <value>
              region: <value>
            credentials:
              method: auto
            id: <id>
            provider: aws-s3
            status: delayed
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: lake
    x-speakeasy-test-rebuild: true
  - workflowId: getCriblLakeStorageLocationByLakeId
    steps:
      - stepId: test
        operationId: getCriblLakeStorageLocationByLakeId
        parameters:
          - name: lakeId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: lake
    x-speakeasy-test-rebuild: true
  - workflowId: deleteCriblLakeStorageLocationByLakeIdAndId
    steps:
      - stepId: test
        operationId: deleteCriblLakeStorageLocationByLakeIdAndId
        parameters:
          - name: lakeId
            in: path
            value: <id>
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: lake
    x-speakeasy-test-rebuild: true
  - workflowId: getCriblLakeStorageLocationByLakeIdAndId
    steps:
      - stepId: test
        operationId: getCriblLakeStorageLocationByLakeIdAndId
        parameters:
          - name: lakeId
            in: path
            value: <id>
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: lake
    x-speakeasy-test-rebuild: true
  - workflowId: updateCriblLakeStorageLocationByLakeIdAndId
    steps:
      - stepId: test
        operationId: updateCriblLakeStorageLocationByLakeIdAndId
        parameters:
          - name: lakeId
            in: path
            value: <id>
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            config:
              bucketName: <value>
              region: <value>
            credentials:
              method: auto
            id: <id>
            provider: aws-s3
            status: blocked
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: lake
    x-speakeasy-test-rebuild: true
  - workflowId: listDashboardCategory
    steps:
      - stepId: test
        operationId: listDashboardCategory
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: dashboardCategories
    x-speakeasy-test-rebuild: true
  - workflowId: createDashboardCategory
    steps:
      - stepId: test
        operationId: createDashboardCategory
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            name: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: dashboardCategories
    x-speakeasy-test-rebuild: true
  - workflowId: getDashboardCategoryById
    steps:
      - stepId: test
        operationId: getDashboardCategoryById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: dashboardCategories
    x-speakeasy-test-rebuild: true
  - workflowId: updateDashboardCategoryById
    steps:
      - stepId: test
        operationId: updateDashboardCategoryById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            name: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: dashboardCategories
    x-speakeasy-test-rebuild: true
  - workflowId: deleteDashboardCategoryById
    steps:
      - stepId: test
        operationId: deleteDashboardCategoryById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: dashboardCategories
    x-speakeasy-test-rebuild: true
  - workflowId: listUsageGroup
    steps:
      - stepId: test
        operationId: listUsageGroup
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: usage-groups
    x-speakeasy-test-rebuild: true
  - workflowId: createUsageGroup
    steps:
      - stepId: test
        operationId: createUsageGroup
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            rules: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: usage-groups
    x-speakeasy-test-rebuild: true
  - workflowId: getUsageGroupById
    steps:
      - stepId: test
        operationId: getUsageGroupById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: usage-groups
    x-speakeasy-test-rebuild: true
  - workflowId: updateUsageGroupById
    steps:
      - stepId: test
        operationId: updateUsageGroupById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            rules: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: usage-groups
    x-speakeasy-test-rebuild: true
  - workflowId: deleteUsageGroupById
    steps:
      - stepId: test
        operationId: deleteUsageGroupById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: usage-groups
    x-speakeasy-test-rebuild: true
  - workflowId: listDatasetProviderType
    steps:
      - stepId: test
        operationId: listDatasetProviderType
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: datasets
    x-speakeasy-test-rebuild: true
  - workflowId: createDatasetProviderType
    steps:
      - stepId: test
        operationId: createDatasetProviderType
        requestBody:
          contentType: application/json
          payload:
            id: api_elasticsearch
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: datasets
    x-speakeasy-test-rebuild: true
  - workflowId: getDatasetProviderTypeById
    steps:
      - stepId: test
        operationId: getDatasetProviderTypeById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: datasets
    x-speakeasy-test-rebuild: true
  - workflowId: updateDatasetProviderTypeById
    steps:
      - stepId: test
        operationId: updateDatasetProviderTypeById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            id: api_http
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: datasets
    x-speakeasy-test-rebuild: true
  - workflowId: deleteDatasetProviderTypeById
    steps:
      - stepId: test
        operationId: deleteDatasetProviderTypeById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: datasets
    x-speakeasy-test-rebuild: true
  - workflowId: listDatasetProvider
    steps:
      - stepId: test
        operationId: listDatasetProvider
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: datasets
    x-speakeasy-test-rebuild: true
  - workflowId: createDatasetProvider
    steps:
      - stepId: test
        operationId: createDatasetProvider
        requestBody:
          contentType: application/json
          payload: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: datasets
    x-speakeasy-test-rebuild: true
  - workflowId: getDatasetProviderById
    steps:
      - stepId: test
        operationId: getDatasetProviderById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: datasets
    x-speakeasy-test-rebuild: true
  - workflowId: updateDatasetProviderById
    steps:
      - stepId: test
        operationId: updateDatasetProviderById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: datasets
    x-speakeasy-test-rebuild: true
  - workflowId: deleteDatasetProviderById
    steps:
      - stepId: test
        operationId: deleteDatasetProviderById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: datasets
    x-speakeasy-test-rebuild: true
  - workflowId: listDataset
    steps:
      - stepId: test
        operationId: listDataset
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: datasets
    x-speakeasy-test-rebuild: true
  - workflowId: createDataset
    steps:
      - stepId: test
        operationId: createDataset
        requestBody:
          contentType: application/json
          payload: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: datasets
    x-speakeasy-test-rebuild: true
  - workflowId: getDatasetById
    steps:
      - stepId: test
        operationId: getDatasetById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: datasets
    x-speakeasy-test-rebuild: true
  - workflowId: updateDatasetById
    steps:
      - stepId: test
        operationId: updateDatasetById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: datasets
    x-speakeasy-test-rebuild: true
  - workflowId: deleteDatasetById
    steps:
      - stepId: test
        operationId: deleteDatasetById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: datasets
    x-speakeasy-test-rebuild: true
  - workflowId: getDatasetAclById
    steps:
      - stepId: test
        operationId: getDatasetAclById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: datasets
    x-speakeasy-test-rebuild: true
  - workflowId: createDatasetAclApplyById
    steps:
      - stepId: test
        operationId: createDatasetAclApplyById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: datasets
    x-speakeasy-test-rebuild: true
  - workflowId: getDatasetAclTeamsById
    steps:
      - stepId: test
        operationId: getDatasetAclTeamsById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: datasets
    x-speakeasy-test-rebuild: true
  - workflowId: createDatasetAclTeamsApplyById
    steps:
      - stepId: test
        operationId: createDatasetAclTeamsApplyById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: datasets
    x-speakeasy-test-rebuild: true
  - workflowId: getSearchDashboardAclById
    steps:
      - stepId: test
        operationId: getSearchDashboardAclById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: users ACL
    x-speakeasy-test-rebuild: true
  - workflowId: createSearchDashboardAclApplyById
    steps:
      - stepId: test
        operationId: createSearchDashboardAclApplyById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: users ACL
    x-speakeasy-test-rebuild: true
  - workflowId: getGroupsAclById
    steps:
      - stepId: test
        operationId: getGroupsAclById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: users ACL
    x-speakeasy-test-rebuild: true
  - workflowId: getSearchDashboardAclTeamsById
    steps:
      - stepId: test
        operationId: getSearchDashboardAclTeamsById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: teams ACL
    x-speakeasy-test-rebuild: true
  - workflowId: createSearchDashboardAclTeamsApplyById
    steps:
      - stepId: test
        operationId: createSearchDashboardAclTeamsApplyById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: teams ACL
    x-speakeasy-test-rebuild: true
  - workflowId: listAppscopeLibEntry
    steps:
      - stepId: test
        operationId: listAppscopeLibEntry
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: appscope-configs
    x-speakeasy-test-rebuild: true
  - workflowId: createAppscopeLibEntry
    steps:
      - stepId: test
        operationId: createAppscopeLibEntry
        requestBody:
          contentType: application/json
          payload:
            config: {}
            description: neatly floodlight athwart fearless scamper dispose
            id: <id>
            lib: cribl
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: appscope-configs
    x-speakeasy-test-rebuild: true
  - workflowId: getAppscopeLibEntryById
    steps:
      - stepId: test
        operationId: getAppscopeLibEntryById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: appscope-configs
    x-speakeasy-test-rebuild: true
  - workflowId: updateAppscopeLibEntryById
    steps:
      - stepId: test
        operationId: updateAppscopeLibEntryById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            config: {}
            description: blaspheme failing smug yet part diver dramatize
            id: <id>
            lib: cribl
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: appscope-configs
    x-speakeasy-test-rebuild: true
  - workflowId: deleteAppscopeLibEntryById
    steps:
      - stepId: test
        operationId: deleteAppscopeLibEntryById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: appscope-configs
    x-speakeasy-test-rebuild: true
  - workflowId: listGrokFile
    steps:
      - stepId: test
        operationId: listGrokFile
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: grokfiles
    x-speakeasy-test-rebuild: true
  - workflowId: createGrokFile
    steps:
      - stepId: test
        operationId: createGrokFile
        requestBody:
          contentType: application/json
          payload:
            content: <value>
            id: <id>
            size: 8001.66
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: grokfiles
    x-speakeasy-test-rebuild: true
  - workflowId: getGrokFileById
    steps:
      - stepId: test
        operationId: getGrokFileById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: grokfiles
    x-speakeasy-test-rebuild: true
  - workflowId: updateGrokFileById
    steps:
      - stepId: test
        operationId: updateGrokFileById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            content: <value>
            id: <id>
            size: 7435.13
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: grokfiles
    x-speakeasy-test-rebuild: true
  - workflowId: deleteGrokFileById
    steps:
      - stepId: test
        operationId: deleteGrokFileById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: grokfiles
    x-speakeasy-test-rebuild: true
  - workflowId: listLookupFile
    steps:
      - stepId: test
        operationId: listLookupFile
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: lookups
    x-speakeasy-test-rebuild: true
  - workflowId: createLookupFile
    steps:
      - stepId: test
        operationId: createLookupFile
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            mode: memory
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: lookups
    x-speakeasy-test-rebuild: true
  - workflowId: updateLookupFile
    steps:
      - stepId: test
        operationId: updateLookupFile
        requestBody:
          contentType: text/csv
          payload: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "filename": "example.file",
                "rows": 8202.91,
                "size": 3894.55
              }
            type: simple
    x-speakeasy-test-group: lookups
    x-speakeasy-test-rebuild: true
  - workflowId: getLookupFileById
    steps:
      - stepId: test
        operationId: getLookupFileById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: lookups
    x-speakeasy-test-rebuild: true
  - workflowId: updateLookupFileById
    steps:
      - stepId: test
        operationId: updateLookupFileById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            mode: memory
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: lookups
    x-speakeasy-test-rebuild: true
  - workflowId: deleteLookupFileById
    steps:
      - stepId: test
        operationId: deleteLookupFileById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: lookups
    x-speakeasy-test-rebuild: true
  - workflowId: updateLookupFileCloneById
    steps:
      - stepId: test
        operationId: updateLookupFileCloneById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            properties:
              context:
                anyOf: []
              newId:
                pattern: <value>
                title: <value>
                type: <value>
            required: []
            type: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: lookups
    x-speakeasy-test-rebuild: true
  - workflowId: listParser
    steps:
      - stepId: test
        operationId: listParser
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: parsers
    x-speakeasy-test-rebuild: true
  - workflowId: createParser
    steps:
      - stepId: test
        operationId: createParser
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            type: csv
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: parsers
    x-speakeasy-test-rebuild: true
  - workflowId: getParserById
    steps:
      - stepId: test
        operationId: getParserById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: parsers
    x-speakeasy-test-rebuild: true
  - workflowId: updateParserById
    steps:
      - stepId: test
        operationId: updateParserById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            type: csv
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: parsers
    x-speakeasy-test-rebuild: true
  - workflowId: deleteParserById
    steps:
      - stepId: test
        operationId: deleteParserById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: parsers
    x-speakeasy-test-rebuild: true
  - workflowId: getProtobufLibraryConfig
    steps:
      - stepId: test
        operationId: getProtobufLibraryConfig
        parameters:
          - name: onlyWithEncodings
            in: query
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: protobuflibraries
    x-speakeasy-test-rebuild: true
  - workflowId: getProtobufLibraryConfigById
    steps:
      - stepId: test
        operationId: getProtobufLibraryConfigById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: protobuflibraries
    x-speakeasy-test-rebuild: true
  - workflowId: getProtobufLibraryConfigEncodingsByIdAndEncId
    steps:
      - stepId: test
        operationId: getProtobufLibraryConfigEncodingsByIdAndEncId
        parameters:
          - name: id
            in: path
            value: <id>
          - name: encid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: protobuflibraries
    x-speakeasy-test-rebuild: true
  - workflowId: getProtobufLibraryConfigEncodingsById
    steps:
      - stepId: test
        operationId: getProtobufLibraryConfigEncodingsById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: protobuflibraries
    x-speakeasy-test-rebuild: true
  - workflowId: listRegexLibEntry
    steps:
      - stepId: test
        operationId: listRegexLibEntry
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: regexes
    x-speakeasy-test-rebuild: true
  - workflowId: createRegexLibEntry
    steps:
      - stepId: test
        operationId: createRegexLibEntry
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            regex: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: regexes
    x-speakeasy-test-rebuild: true
  - workflowId: getRegexLibEntryById
    steps:
      - stepId: test
        operationId: getRegexLibEntryById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: regexes
    x-speakeasy-test-rebuild: true
  - workflowId: updateRegexLibEntryById
    steps:
      - stepId: test
        operationId: updateRegexLibEntryById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            regex: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: regexes
    x-speakeasy-test-rebuild: true
  - workflowId: deleteRegexLibEntryById
    steps:
      - stepId: test
        operationId: deleteRegexLibEntryById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: regexes
    x-speakeasy-test-rebuild: true
  - workflowId: listSensitiveDataRule
    steps:
      - stepId: test
        operationId: listSensitiveDataRule
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: sds-rules
    x-speakeasy-test-rebuild: true
  - workflowId: createSensitiveDataRule
    steps:
      - stepId: test
        operationId: createSensitiveDataRule
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            regex: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: sds-rules
    x-speakeasy-test-rebuild: true
  - workflowId: getSensitiveDataRuleById
    steps:
      - stepId: test
        operationId: getSensitiveDataRuleById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: sds-rules
    x-speakeasy-test-rebuild: true
  - workflowId: updateSensitiveDataRuleById
    steps:
      - stepId: test
        operationId: updateSensitiveDataRuleById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            regex: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: sds-rules
    x-speakeasy-test-rebuild: true
  - workflowId: deleteSensitiveDataRuleById
    steps:
      - stepId: test
        operationId: deleteSensitiveDataRuleById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: sds-rules
    x-speakeasy-test-rebuild: true
  - workflowId: listSearchDashboard
    steps:
      - stepId: test
        operationId: listSearchDashboard
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: dashboards
    x-speakeasy-test-rebuild: true
  - workflowId: createSearchDashboard
    steps:
      - stepId: test
        operationId: createSearchDashboard
        requestBody:
          contentType: application/json
          payload:
            created: 9377.15
            createdBy: <value>
            elements:
              - id: <id>
                type: markdown.default
                variant: markdown
            id: <id>
            modified: 5003.17
            name: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: dashboards
    x-speakeasy-test-rebuild: true
  - workflowId: getSearchDashboardById
    steps:
      - stepId: test
        operationId: getSearchDashboardById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: dashboards
    x-speakeasy-test-rebuild: true
  - workflowId: updateSearchDashboardById
    steps:
      - stepId: test
        operationId: updateSearchDashboardById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            created: 9322.04
            createdBy: <value>
            elements:
              - id: <id>
                search:
                  queryId: <id>
                  type: saved
                type: list.events
            id: <id>
            modified: 2991.89
            name: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: dashboards
    x-speakeasy-test-rebuild: true
  - workflowId: deleteSearchDashboardById
    steps:
      - stepId: test
        operationId: deleteSearchDashboardById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: dashboards
    x-speakeasy-test-rebuild: true
  - workflowId: listSearchMacro
    steps:
      - stepId: test
        operationId: listSearchMacro
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: macros
    x-speakeasy-test-rebuild: true
  - workflowId: createSearchMacro
    steps:
      - stepId: test
        operationId: createSearchMacro
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            replacement: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: macros
    x-speakeasy-test-rebuild: true
  - workflowId: getSearchMacroById
    steps:
      - stepId: test
        operationId: getSearchMacroById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: macros
    x-speakeasy-test-rebuild: true
  - workflowId: updateSearchMacroById
    steps:
      - stepId: test
        operationId: updateSearchMacroById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            replacement: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: macros
    x-speakeasy-test-rebuild: true
  - workflowId: deleteSearchMacroById
    steps:
      - stepId: test
        operationId: deleteSearchMacroById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: macros
    x-speakeasy-test-rebuild: true
  - workflowId: listSavedQuery
    steps:
      - stepId: test
        operationId: listSavedQuery
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: savedQueries
    x-speakeasy-test-rebuild: true
  - workflowId: createSavedQuery
    steps:
      - stepId: test
        operationId: createSavedQuery
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            name: <value>
            query: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: savedQueries
    x-speakeasy-test-rebuild: true
  - workflowId: getSavedQueryById
    steps:
      - stepId: test
        operationId: getSavedQueryById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: savedQueries
    x-speakeasy-test-rebuild: true
  - workflowId: updateSavedQueryById
    steps:
      - stepId: test
        operationId: updateSavedQueryById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            name: <value>
            query: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: savedQueries
    x-speakeasy-test-rebuild: true
  - workflowId: deleteSavedQueryById
    steps:
      - stepId: test
        operationId: deleteSavedQueryById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: savedQueries
    x-speakeasy-test-rebuild: true
  - workflowId: listSearchJob
    steps:
      - stepId: test
        operationId: listSearchJob
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: createSearchJob
    steps:
      - stepId: test
        operationId: createSearchJob
        requestBody:
          contentType: application/json
          payload:
            displayUsername: <value>
            group: <value>
            id: <id>
            query: <value>
            status: canceled
            timeCreated: 328.87
            user: Janessa95
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: getSearchJobById
    steps:
      - stepId: test
        operationId: getSearchJobById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: updateSearchJobById
    steps:
      - stepId: test
        operationId: updateSearchJobById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            displayUsername: <value>
            group: <value>
            id: <id>
            query: <value>
            status: running
            timeCreated: 6068.64
            user: Lexi.Lemke
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: deleteSearchJobById
    steps:
      - stepId: test
        operationId: deleteSearchJobById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: createSearchJobDispatchExecutorsById
    steps:
      - stepId: test
        operationId: createSearchJobDispatchExecutorsById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: getSearchJobSettingsById
    steps:
      - stepId: test
        operationId: getSearchJobSettingsById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: createSearchJobSettingsById
    steps:
      - stepId: test
        operationId: createSearchJobSettingsById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: getSearchJobStatusById
    steps:
      - stepId: test
        operationId: getSearchJobStatusById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "status": "completed",
                "timeCreated": 722.29
              }
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: getSearchJobTimelineById
    steps:
      - stepId: test
        operationId: getSearchJobTimelineById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "buckets": [
                  {
                    "duration": 8639.75,
                    "earliest": 1076.08,
                    "eventCount": 3949.64
                  }
                ],
                "totalEventCount": 5534.69
              }
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: getSearchJobFieldSummariesById
    steps:
      - stepId: test
        operationId: getSearchJobFieldSummariesById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "fields": [],
                "totalEventCount": 6327.1
              }
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: getSearchJobLogsById
    steps:
      - stepId: test
        operationId: getSearchJobLogsById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: createSearchEventBreakerPreview
    steps:
      - stepId: test
        operationId: createSearchEventBreakerPreview
        requestBody:
          contentType: application/json
          payload:
            input:
              dataset: <value>
              type: dataset
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: getSearchDocs
    steps:
      - stepId: test
        operationId: getSearchDocs
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              "\u003cvalue\u003e"
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: getSearchHealthcheck
    steps:
      - stepId: test
        operationId: getSearchHealthcheck
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: getSearchJobsMetricsById
    steps:
      - stepId: test
        operationId: getSearchJobsMetricsById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              "\u003cvalue\u003e"
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: getSearchJobMetrics
    steps:
      - stepId: test
        operationId: getSearchJobMetrics
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              "\u003cvalue\u003e"
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: createSearchPreview
    steps:
      - stepId: test
        operationId: createSearchPreview
        requestBody:
          contentType: application/json
          payload:
            events: []
            query: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: createSearchUiMetrics
    steps:
      - stepId: test
        operationId: createSearchUiMetrics
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              "\u003cvalue\u003e"
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: getSearchJobsDiagById
    steps:
      - stepId: test
        operationId: getSearchJobsDiagById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              "\u003cvalue\u003e"
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: getSearchJobsLogsByIdAndFilename
    steps:
      - stepId: test
        operationId: getSearchJobsLogsByIdAndFilename
        parameters:
          - name: id
            in: path
            value: <id>
          - name: filename
            in: path
            value: example.file
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              "\u003cvalue\u003e"
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: getSearchJobsStagesResultsByIdAndStageId
    steps:
      - stepId: test
        operationId: getSearchJobsStagesResultsByIdAndStageId
        parameters:
          - name: id
            in: path
            value: <id>
          - name: stageId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              "\u003cvalue\u003e"
            type: simple
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: getSearchJobsResultsById
    steps:
      - stepId: test
        operationId: getSearchJobsResultsById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: getSearchJobsResultsPollById
    steps:
      - stepId: test
        operationId: getSearchJobsResultsPollById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: search
    x-speakeasy-test-rebuild: true
  - workflowId: getDatabaseConnectionConfig
    steps:
      - stepId: test
        operationId: getDatabaseConnectionConfig
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: database-connections
    x-speakeasy-test-rebuild: true
  - workflowId: createDatabaseConnectionConfig
    steps:
      - stepId: test
        operationId: createDatabaseConnectionConfig
        requestBody:
          contentType: application/json
          payload:
            authType: <value>
            databaseType: postgres
            description: besides investigate yowza skyline promptly daintily afore contravene meanwhile
            id: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: database-connections
    x-speakeasy-test-rebuild: true
  - workflowId: getDatabaseConnectionConfigById
    steps:
      - stepId: test
        operationId: getDatabaseConnectionConfigById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: database-connections
    x-speakeasy-test-rebuild: true
  - workflowId: updateDatabaseConnectionConfigById
    steps:
      - stepId: test
        operationId: updateDatabaseConnectionConfigById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            authType: <value>
            databaseType: oracle
            description: developmental oof hourly
            id: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: database-connections
    x-speakeasy-test-rebuild: true
  - workflowId: deleteDatabaseConnectionConfigById
    steps:
      - stepId: test
        operationId: deleteDatabaseConnectionConfigById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: database-connections
    x-speakeasy-test-rebuild: true
  - workflowId: createLibDatabaseConnectionsTest
    steps:
      - stepId: test
        operationId: createLibDatabaseConnectionsTest
        requestBody:
          contentType: application/json
          payload:
            authType: <value>
            databaseType: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: database-connections
    x-speakeasy-test-rebuild: true
  - workflowId: listEventBreakerRuleset
    steps:
      - stepId: test
        operationId: listEventBreakerRuleset
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: event_breaker_rules
    x-speakeasy-test-rebuild: true
  - workflowId: createEventBreakerRuleset
    steps:
      - stepId: test
        operationId: createEventBreakerRuleset
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            lib: custom
            minRawLength: 256
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: event_breaker_rules
    x-speakeasy-test-rebuild: true
  - workflowId: getEventBreakerRulesetById
    steps:
      - stepId: test
        operationId: getEventBreakerRulesetById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: event_breaker_rules
    x-speakeasy-test-rebuild: true
  - workflowId: updateEventBreakerRulesetById
    steps:
      - stepId: test
        operationId: updateEventBreakerRulesetById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            lib: custom
            minRawLength: 256
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: event_breaker_rules
    x-speakeasy-test-rebuild: true
  - workflowId: deleteEventBreakerRulesetById
    steps:
      - stepId: test
        operationId: deleteEventBreakerRulesetById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: event_breaker_rules
    x-speakeasy-test-rebuild: true
  - workflowId: getGlobalVariable
    steps:
      - stepId: test
        operationId: getGlobalVariable
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: global_variables
    x-speakeasy-test-rebuild: true
  - workflowId: createGlobalVariable
    steps:
      - stepId: test
        operationId: createGlobalVariable
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            type: any
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: global_variables
    x-speakeasy-test-rebuild: true
  - workflowId: getGlobalVariableById
    steps:
      - stepId: test
        operationId: getGlobalVariableById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: global_variables
    x-speakeasy-test-rebuild: true
  - workflowId: updateGlobalVariableById
    steps:
      - stepId: test
        operationId: updateGlobalVariableById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            type: any
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: global_variables
    x-speakeasy-test-rebuild: true
  - workflowId: deleteGlobalVariableById
    steps:
      - stepId: test
        operationId: deleteGlobalVariableById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: global_variables
    x-speakeasy-test-rebuild: true
  - workflowId: getGlobalVariableLibVarsByPack
    steps:
      - stepId: test
        operationId: getGlobalVariableLibVarsByPack
        parameters:
          - name: pack
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: global_variables
    x-speakeasy-test-rebuild: true
  - workflowId: createGlobalVariableLibVarsByPack
    steps:
      - stepId: test
        operationId: createGlobalVariableLibVarsByPack
        parameters:
          - name: pack
            in: path
            value: <value>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            type: any
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: global_variables
    x-speakeasy-test-rebuild: true
  - workflowId: getGlobalVariableLibVarsByPackAndId
    steps:
      - stepId: test
        operationId: getGlobalVariableLibVarsByPackAndId
        parameters:
          - name: id
            in: path
            value: <id>
          - name: pack
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: global_variables
    x-speakeasy-test-rebuild: true
  - workflowId: updateGlobalVariableLibVarsByPackAndId
    steps:
      - stepId: test
        operationId: updateGlobalVariableLibVarsByPackAndId
        parameters:
          - name: id
            in: path
            value: <id>
          - name: pack
            in: path
            value: <value>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            type: any
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: global_variables
    x-speakeasy-test-rebuild: true
  - workflowId: deleteGlobalVariableLibVarsByPackAndId
    steps:
      - stepId: test
        operationId: deleteGlobalVariableLibVarsByPackAndId
        parameters:
          - name: id
            in: path
            value: <id>
          - name: pack
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: global_variables
    x-speakeasy-test-rebuild: true
  - workflowId: listHmacFunction
    steps:
      - stepId: test
        operationId: listHmacFunction
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: hmac-functions
    x-speakeasy-test-rebuild: true
  - workflowId: createHmacFunction
    steps:
      - stepId: test
        operationId: createHmacFunction
        requestBody:
          contentType: application/json
          payload:
            headerExpression: <value>
            headerName: <value>
            id: <id>
            lib: custom
            stringBuilders:
              - <value 1>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: hmac-functions
    x-speakeasy-test-rebuild: true
  - workflowId: getHmacFunctionById
    steps:
      - stepId: test
        operationId: getHmacFunctionById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: hmac-functions
    x-speakeasy-test-rebuild: true
  - workflowId: updateHmacFunctionById
    steps:
      - stepId: test
        operationId: updateHmacFunctionById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            headerExpression: <value>
            headerName: <value>
            id: <id>
            lib: cribl
            stringBuilders:
              - <value 1>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: hmac-functions
    x-speakeasy-test-rebuild: true
  - workflowId: deleteHmacFunctionById
    steps:
      - stepId: test
        operationId: deleteHmacFunctionById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: hmac-functions
    x-speakeasy-test-rebuild: true
  - workflowId: listInput
    steps:
      - stepId: test
        operationId: listInput
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: inputs
    x-speakeasy-test-rebuild: true
  - workflowId: createInput
    steps:
      - stepId: test
        operationId: createInput
        requestBody:
          contentType: application/json
          payload:
            authType: manual
            disabled: false
            enableHeader: false
            enableProxyHeader: false
            host: 0.0.0.0
            ipWhitelistRegex: /.*/
            maxActiveCxn: 1000
            port: 301.76
            pqEnabled: false
            sendToRoutes: true
            socketEndingMaxWait: 30
            socketIdleTimeout: 0
            socketMaxLifespan: 0
            staleChannelFlushMs: 10000
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: inputs
    x-speakeasy-test-rebuild: true
  - workflowId: getInputById
    steps:
      - stepId: test
        operationId: getInputById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: inputs
    x-speakeasy-test-rebuild: true
  - workflowId: updateInputById
    steps:
      - stepId: test
        operationId: updateInputById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            disabled: false
            id: <id>
            pqEnabled: false
            sendToRoutes: true
            type: kube_events
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: inputs
    x-speakeasy-test-rebuild: true
  - workflowId: deleteInputById
    steps:
      - stepId: test
        operationId: deleteInputById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: inputs
    x-speakeasy-test-rebuild: true
  - workflowId: createInputHecTokenById
    steps:
      - stepId: test
        operationId: createInputHecTokenById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            token: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: inputs
    x-speakeasy-test-rebuild: true
  - workflowId: updateInputHecTokenByIdAndToken
    steps:
      - stepId: test
        operationId: updateInputHecTokenByIdAndToken
        parameters:
          - name: id
            in: path
            value: <id>
          - name: token
            in: path
            value: <value>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: inputs
    x-speakeasy-test-rebuild: true
  - workflowId: listInputStatus
    steps:
      - stepId: test
        operationId: listInputStatus
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: inputs
    x-speakeasy-test-rebuild: true
  - workflowId: getInputStatusById
    steps:
      - stepId: test
        operationId: getInputStatusById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: inputs
    x-speakeasy-test-rebuild: true
  - workflowId: listIoMetricsEntry
    steps:
      - stepId: test
        operationId: listIoMetricsEntry
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: iometrics
    x-speakeasy-test-rebuild: true
  - workflowId: getIoMetricsEntryById
    steps:
      - stepId: test
        operationId: getIoMetricsEntryById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: iometrics
    x-speakeasy-test-rebuild: true
  - workflowId: updateIoMetricsEntryById
    steps:
      - stepId: test
        operationId: updateIoMetricsEntryById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            level: minimal
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: iometrics
    x-speakeasy-test-rebuild: true
  - workflowId: deleteIoMetricsEntryById
    steps:
      - stepId: test
        operationId: deleteIoMetricsEntryById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: iometrics
    x-speakeasy-test-rebuild: true
  - workflowId: listOutput
    steps:
      - stepId: test
        operationId: listOutput
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: outputs
    x-speakeasy-test-rebuild: true
  - workflowId: createOutput
    steps:
      - stepId: test
        operationId: createOutput
        requestBody:
          contentType: application/json
          payload:
            compress: true
            concurrency: 5
            failedRequestLoggingMode: none
            flushPeriodSec: 1
            includeDocId: true
            index: <value>
            maxPayloadEvents: 0
            maxPayloadSizeKB: 4096
            onBackpressure: block
            pqCompress: none
            pqMaxFileSize: 1 MB
            pqMaxSize: 5GB
            pqMode: error
            pqOnBackpressure: block
            pqPath: $CRIBL_HOME/state/queues
            rejectUnauthorized: true
            responseHonorRetryAfterHeader: false
            timeoutSec: 30
            url: https://probable-rationale.com/
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: outputs
    x-speakeasy-test-rebuild: true
  - workflowId: getOutputById
    steps:
      - stepId: test
        operationId: getOutputById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: outputs
    x-speakeasy-test-rebuild: true
  - workflowId: updateOutputById
    steps:
      - stepId: test
        operationId: updateOutputById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            authType: manual
            compress: true
            concurrency: 5
            failedRequestLoggingMode: none
            flushPeriodSec: 1
            maxPayloadEvents: 0
            maxPayloadSizeKB: 4096
            onBackpressure: block
            pqCompress: none
            pqMaxFileSize: 1 MB
            pqMaxSize: 5GB
            pqMode: error
            pqOnBackpressure: block
            pqPath: $CRIBL_HOME/state/queues
            realm: us0
            rejectUnauthorized: true
            responseHonorRetryAfterHeader: false
            timeoutSec: 30
            type: signalfx
            useRoundRobinDns: false
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: outputs
    x-speakeasy-test-rebuild: true
  - workflowId: deleteOutputById
    steps:
      - stepId: test
        operationId: deleteOutputById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: outputs
    x-speakeasy-test-rebuild: true
  - workflowId: deleteOutputPqById
    steps:
      - stepId: test
        operationId: deleteOutputPqById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: outputs
    x-speakeasy-test-rebuild: true
  - workflowId: getOutputPqById
    steps:
      - stepId: test
        operationId: getOutputPqById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: outputs
    x-speakeasy-test-rebuild: true
  - workflowId: getOutputSamplesById
    steps:
      - stepId: test
        operationId: getOutputSamplesById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: outputs
    x-speakeasy-test-rebuild: true
  - workflowId: createOutputTestById
    steps:
      - stepId: test
        operationId: createOutputTestById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            events:
              - _raw: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: outputs
    x-speakeasy-test-rebuild: true
  - workflowId: listOutputStatus
    steps:
      - stepId: test
        operationId: listOutputStatus
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: outputs
    x-speakeasy-test-rebuild: true
  - workflowId: getOutputStatusById
    steps:
      - stepId: test
        operationId: getOutputStatusById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: outputs
    x-speakeasy-test-rebuild: true
  - workflowId: listSchema
    steps:
      - stepId: test
        operationId: listSchema
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: parquetschemas
    x-speakeasy-test-rebuild: true
  - workflowId: createSchema
    steps:
      - stepId: test
        operationId: createSchema
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            schema: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: parquetschemas
    x-speakeasy-test-rebuild: true
  - workflowId: getSchemaById
    steps:
      - stepId: test
        operationId: getSchemaById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: parquetschemas
    x-speakeasy-test-rebuild: true
  - workflowId: updateSchemaById
    steps:
      - stepId: test
        operationId: updateSchemaById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            schema: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: parquetschemas
    x-speakeasy-test-rebuild: true
  - workflowId: deleteSchemaById
    steps:
      - stepId: test
        operationId: deleteSchemaById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: parquetschemas
    x-speakeasy-test-rebuild: true
  - workflowId: listProfilerItem
    steps:
      - stepId: test
        operationId: listProfilerItem
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: profiler
    x-speakeasy-test-rebuild: true
  - workflowId: createProfilerItem
    steps:
      - stepId: test
        operationId: createProfilerItem
        requestBody:
          contentType: application/json
          payload:
            id: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: profiler
    x-speakeasy-test-rebuild: true
  - workflowId: getProfilerItemById
    steps:
      - stepId: test
        operationId: getProfilerItemById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: profiler
    x-speakeasy-test-rebuild: true
  - workflowId: updateProfilerItemById
    steps:
      - stepId: test
        operationId: updateProfilerItemById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: profiler
    x-speakeasy-test-rebuild: true
  - workflowId: deleteProfilerItemById
    steps:
      - stepId: test
        operationId: deleteProfilerItemById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: profiler
    x-speakeasy-test-rebuild: true
  - workflowId: listRoutes
    steps:
      - stepId: test
        operationId: listRoutes
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: routes
    x-speakeasy-test-rebuild: true
  - workflowId: getRoutesById
    steps:
      - stepId: test
        operationId: getRoutesById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: routes
    x-speakeasy-test-rebuild: true
  - workflowId: updateRoutesById
    steps:
      - stepId: test
        operationId: updateRoutesById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            routes: []
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: routes
    x-speakeasy-test-rebuild: true
  - workflowId: createRoutesAppendById
    steps:
      - stepId: test
        operationId: createRoutesAppendById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: []
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: routes
    x-speakeasy-test-rebuild: true
  - workflowId: getRoutesByPack
    steps:
      - stepId: test
        operationId: getRoutesByPack
        parameters:
          - name: pack
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: routes
    x-speakeasy-test-rebuild: true
  - workflowId: getRoutesByPackAndId
    steps:
      - stepId: test
        operationId: getRoutesByPackAndId
        parameters:
          - name: id
            in: path
            value: <id>
          - name: pack
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: routes
    x-speakeasy-test-rebuild: true
  - workflowId: updateRoutesByPackAndId
    steps:
      - stepId: test
        operationId: updateRoutesByPackAndId
        parameters:
          - name: id
            in: path
            value: <id>
          - name: pack
            in: path
            value: <value>
        requestBody:
          contentType: application/json
          payload:
            routes: []
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: routes
    x-speakeasy-test-rebuild: true
  - workflowId: createRoutesAppendByPackAndId
    steps:
      - stepId: test
        operationId: createRoutesAppendByPackAndId
        parameters:
          - name: id
            in: path
            value: <id>
          - name: pack
            in: path
            value: <value>
        requestBody:
          contentType: application/json
          payload:
            - final: true
              id: <id>
              name: <value>
              pipeline: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: routes
    x-speakeasy-test-rebuild: true
  - workflowId: listLibSchemas
    steps:
      - stepId: test
        operationId: listLibSchemas
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: schemas
    x-speakeasy-test-rebuild: true
  - workflowId: createLibSchemas
    steps:
      - stepId: test
        operationId: createLibSchemas
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            schema: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: schemas
    x-speakeasy-test-rebuild: true
  - workflowId: getLibSchemasById
    steps:
      - stepId: test
        operationId: getLibSchemasById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: schemas
    x-speakeasy-test-rebuild: true
  - workflowId: updateLibSchemasById
    steps:
      - stepId: test
        operationId: updateLibSchemasById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            schema: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: schemas
    x-speakeasy-test-rebuild: true
  - workflowId: deleteLibSchemasById
    steps:
      - stepId: test
        operationId: deleteLibSchemasById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: schemas
    x-speakeasy-test-rebuild: true
  - workflowId: getSchemaLibByPack
    steps:
      - stepId: test
        operationId: getSchemaLibByPack
        parameters:
          - name: pack
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: schemas
    x-speakeasy-test-rebuild: true
  - workflowId: createSchemaLibByPack
    steps:
      - stepId: test
        operationId: createSchemaLibByPack
        parameters:
          - name: pack
            in: path
            value: <value>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            schema: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: schemas
    x-speakeasy-test-rebuild: true
  - workflowId: getSchemaLibByPackAndId
    steps:
      - stepId: test
        operationId: getSchemaLibByPackAndId
        parameters:
          - name: id
            in: path
            value: <id>
          - name: pack
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: schemas
    x-speakeasy-test-rebuild: true
  - workflowId: updateSchemaLibByPackAndId
    steps:
      - stepId: test
        operationId: updateSchemaLibByPackAndId
        parameters:
          - name: id
            in: path
            value: <id>
          - name: pack
            in: path
            value: <value>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            schema: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: schemas
    x-speakeasy-test-rebuild: true
  - workflowId: deleteSchemaLibByPackAndId
    steps:
      - stepId: test
        operationId: deleteSchemaLibByPackAndId
        parameters:
          - name: id
            in: path
            value: <id>
          - name: pack
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: schemas
    x-speakeasy-test-rebuild: true
  - workflowId: listRestSecret
    steps:
      - stepId: test
        operationId: listRestSecret
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: secrets
    x-speakeasy-test-rebuild: true
  - workflowId: createRestSecret
    steps:
      - stepId: test
        operationId: createRestSecret
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            secretType: keypair
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: secrets
    x-speakeasy-test-rebuild: true
  - workflowId: getRestSecretById
    steps:
      - stepId: test
        operationId: getRestSecretById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: secrets
    x-speakeasy-test-rebuild: true
  - workflowId: updateRestSecretById
    steps:
      - stepId: test
        operationId: updateRestSecretById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            secretType: credentials
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: secrets
    x-speakeasy-test-rebuild: true
  - workflowId: deleteRestSecretById
    steps:
      - stepId: test
        operationId: deleteRestSecretById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: secrets
    x-speakeasy-test-rebuild: true
  - workflowId: createEdgeAppscopeProcesses
    steps:
      - stepId: test
        operationId: createEdgeAppscopeProcesses
        parameters:
          - name: pid
            in: query
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: edgeAppScopeProcesses
    x-speakeasy-test-rebuild: true
  - workflowId: getEdgeAppscopeProcesses
    steps:
      - stepId: test
        operationId: getEdgeAppscopeProcesses
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: edgeAppScopeProcesses
    x-speakeasy-test-rebuild: true
  - workflowId: deleteEdgeAppscopeProcessesByPid
    steps:
      - stepId: test
        operationId: deleteEdgeAppscopeProcessesByPid
        parameters:
          - name: pid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: edgeAppScopeProcesses
    x-speakeasy-test-rebuild: true
  - workflowId: getEdgeAppscopeProcessesByPid
    steps:
      - stepId: test
        operationId: getEdgeAppscopeProcessesByPid
        parameters:
          - name: pid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: edgeAppScopeProcesses
    x-speakeasy-test-rebuild: true
  - workflowId: updateEdgeAppscopeProcessesByPid
    steps:
      - stepId: test
        operationId: updateEdgeAppscopeProcessesByPid
        parameters:
          - name: pid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: edgeAppScopeProcesses
    x-speakeasy-test-rebuild: true
  - workflowId: getEdgeEventsCollectors
    steps:
      - stepId: test
        operationId: getEdgeEventsCollectors
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: edge
    x-speakeasy-test-rebuild: true
  - workflowId: getEdgeFileinspect
    steps:
      - stepId: test
        operationId: getEdgeFileinspect
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: edge
    x-speakeasy-test-rebuild: true
  - workflowId: getEdgeLsByPath
    steps:
      - stepId: test
        operationId: getEdgeLsByPath
        parameters:
          - name: path
            in: path
            value: /usr/lib
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: edge
    x-speakeasy-test-rebuild: true
  - workflowId: createProductsEdgeMapQuery
    steps:
      - stepId: test
        operationId: createProductsEdgeMapQuery
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: edge
    x-speakeasy-test-rebuild: true
  - workflowId: getEdgeMetadata
    steps:
      - stepId: test
        operationId: getEdgeMetadata
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: edge
    x-speakeasy-test-rebuild: true
  - workflowId: createEdgeFileIngest
    steps:
      - stepId: test
        operationId: createEdgeFileIngest
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: edge
    x-speakeasy-test-rebuild: true
  - workflowId: getEdgeFileSample
    steps:
      - stepId: test
        operationId: getEdgeFileSample
        parameters:
          - name: path
            in: query
            value: /usr/ports
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: edge
    x-speakeasy-test-rebuild: true
  - workflowId: createEdgeKubeLogs
    steps:
      - stepId: test
        operationId: createEdgeKubeLogs
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: edge
    x-speakeasy-test-rebuild: true
  - workflowId: getEdgeKubeProxy
    steps:
      - stepId: test
        operationId: getEdgeKubeProxy
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: edge
    x-speakeasy-test-rebuild: true
  - workflowId: getEdgeContainersById
    steps:
      - stepId: test
        operationId: getEdgeContainersById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: edge
    x-speakeasy-test-rebuild: true
  - workflowId: getEdgeContainers
    steps:
      - stepId: test
        operationId: getEdgeContainers
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: edge
    x-speakeasy-test-rebuild: true
  - workflowId: getEdgeLogs
    steps:
      - stepId: test
        operationId: getEdgeLogs
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: edge
    x-speakeasy-test-rebuild: true
  - workflowId: getEdgeProcessesByPid
    steps:
      - stepId: test
        operationId: getEdgeProcessesByPid
        parameters:
          - name: pid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: edge
    x-speakeasy-test-rebuild: true
  - workflowId: getEdgeProcesses
    steps:
      - stepId: test
        operationId: getEdgeProcesses
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: edge
    x-speakeasy-test-rebuild: true
  - workflowId: getEdgeEventsQuery
    steps:
      - stepId: test
        operationId: getEdgeEventsQuery
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: events
    x-speakeasy-test-rebuild: true
  - workflowId: getAuthAuthorizationCodeCallback
    steps:
      - stepId: test
        operationId: getAuthAuthorizationCodeCallback
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: auth
    x-speakeasy-test-rebuild: true
  - workflowId: getAuthMetadata
    steps:
      - stepId: test
        operationId: getAuthMetadata
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == text/xml
          - context: $response.body
            condition: |
              "\u003cvalue\u003e"
            type: simple
    x-speakeasy-test-group: auth
    x-speakeasy-test-rebuild: true
  - workflowId: login
    steps:
      - stepId: test
        operationId: login
        requestBody:
          contentType: application/json
          payload:
            password: Ljp4BunfMR9hNyM
            username: Nikko.Connelly
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "token": "\u003cvalue\u003e"
              }
            type: simple
    x-speakeasy-test-group: auth
    x-speakeasy-test-rebuild: true
  - workflowId: logout
    steps:
      - stepId: test
        operationId: logout
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: auth
    x-speakeasy-test-rebuild: true
  - workflowId: createAuthSloCallback
    steps:
      - stepId: test
        operationId: createAuthSloCallback
        requestBody:
          contentType: application/x-www-form-urlencoded
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: auth
    x-speakeasy-test-rebuild: true
  - workflowId: getAuthSloCallback
    steps:
      - stepId: test
        operationId: getAuthSloCallback
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: auth
    x-speakeasy-test-rebuild: true
  - workflowId: getAuthSlo
    steps:
      - stepId: test
        operationId: getAuthSlo
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: auth
    x-speakeasy-test-rebuild: true
  - workflowId: createAuthSsoCallback
    steps:
      - stepId: test
        operationId: createAuthSsoCallback
        requestBody:
          contentType: application/x-www-form-urlencoded
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: auth
    x-speakeasy-test-rebuild: true
  - workflowId: getAuthSsoCallback
    steps:
      - stepId: test
        operationId: getAuthSsoCallback
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: auth
    x-speakeasy-test-rebuild: true
  - workflowId: getAuthSso
    steps:
      - stepId: test
        operationId: getAuthSso
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "name": "\u003cvalue\u003e"
              }
            type: simple
    x-speakeasy-test-group: auth
    x-speakeasy-test-rebuild: true
  - workflowId: getAuthGroups
    steps:
      - stepId: test
        operationId: getAuthGroups
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: auth
    x-speakeasy-test-rebuild: true
  - workflowId: getAuthMultiFactor
    steps:
      - stepId: test
        operationId: getAuthMultiFactor
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: auth
    x-speakeasy-test-rebuild: true
  - workflowId: deleteAuthUsersTokenById
    steps:
      - stepId: test
        operationId: deleteAuthUsersTokenById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: auth
    x-speakeasy-test-rebuild: true
  - workflowId: deleteAuthUsersInvalidationById
    steps:
      - stepId: test
        operationId: deleteAuthUsersInvalidationById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: auth
    x-speakeasy-test-rebuild: true
  - workflowId: getAuthorizePolicy
    steps:
      - stepId: test
        operationId: getAuthorizePolicy
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: authorize
    x-speakeasy-test-rebuild: true
  - workflowId: getAuthorizeRoles
    steps:
      - stepId: test
        operationId: getAuthorizeRoles
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: authorize
    x-speakeasy-test-rebuild: true
  - workflowId: getChangelogViewed
    steps:
      - stepId: test
        operationId: getChangelogViewed
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: changelog
    x-speakeasy-test-rebuild: true
  - workflowId: updateChangelogViewed
    steps:
      - stepId: test
        operationId: updateChangelogViewed
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: system
    x-speakeasy-test-rebuild: true
  - workflowId: createSystemDistributedUpgradeCancelByGroup
    steps:
      - stepId: test
        operationId: createSystemDistributedUpgradeCancelByGroup
        parameters:
          - name: group
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: system
    x-speakeasy-test-rebuild: true
  - workflowId: createSystemDistributedUpgradeStageByGroup
    steps:
      - stepId: test
        operationId: createSystemDistributedUpgradeStageByGroup
        parameters:
          - name: group
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: system
    x-speakeasy-test-rebuild: true
  - workflowId: createSystemDistributedUpgradeByGroup
    steps:
      - stepId: test
        operationId: createSystemDistributedUpgradeByGroup
        parameters:
          - name: group
            in: path
            value: <value>
        requestBody:
          contentType: application/json
          payload:
            upgradePercentage: 1
            workerRetries: 5
            workerRetryDelay: 1000
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: system
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemDistributedUpgradeDownloadByFile
    steps:
      - stepId: test
        operationId: getSystemDistributedUpgradeDownloadByFile
        parameters:
          - name: file
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: system
    x-speakeasy-test-rebuild: true
  - workflowId: reloadSettings
    steps:
      - stepId: test
        operationId: reloadSettings
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: system
    x-speakeasy-test-rebuild: true
  - workflowId: triggerRestart
    steps:
      - stepId: test
        operationId: triggerRestart
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: system
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemSettingsAuth
    steps:
      - stepId: test
        operationId: getSystemSettingsAuth
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: system
    x-speakeasy-test-rebuild: true
  - workflowId: updateSystemSettingsAuth
    steps:
      - stepId: test
        operationId: updateSystemSettingsAuth
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: system
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemSettingsConf
    steps:
      - stepId: test
        operationId: getSystemSettingsConf
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: system
    x-speakeasy-test-rebuild: true
  - workflowId: updateSystemSettingsConf
    steps:
      - stepId: test
        operationId: updateSystemSettingsConf
        requestBody:
          contentType: application/json
          payload:
            api:
              disabled: true
              host: both-draw.com
              port: 3795.06
              protocol: <value>
              ssl:
                certPath: <value>
                disabled: false
                passphrase: <value>
                privKeyPath: <value>
              workerRemoteAccess: false
            backups:
              backupPersistence: <value>
              backupsDirectory: <value>
            customLogo:
              enabled: false
              logoDescription: <value>
              logoImage: <value>
            pii:
              enablePiiDetection: true
            proxy:
              useEnvVars: true
            rollback:
              rollbackEnabled: true
            shutdown:
              drainTimeout: 2424.38
            sni:
              disableSNIRouting: true
            system:
              intercom: false
              upgrade: "false"
            tls:
              defaultCipherList: <value>
              defaultEcdhCurve: <value>
              maxVersion: <value>
              minVersion: <value>
              rejectUnauthorized: true
            upgradeGroupSettings: {}
            upgradeSettings:
              disableAutomaticUpgrade: false
              enableLegacyEdgeUpgrade: false
              upgradeSource: <value>
            workers:
              count: 1297.29
              memory: 5944.19
              minimum: 3174.73
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: system
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemSettingsSearchLimits
    steps:
      - stepId: test
        operationId: getSystemSettingsSearchLimits
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: system
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemSettings
    steps:
      - stepId: test
        operationId: getSystemSettings
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: system
    x-speakeasy-test-rebuild: true
  - workflowId: updateSystemSettings
    steps:
      - stepId: test
        operationId: updateSystemSettings
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: system
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemSettingsCribl
    steps:
      - stepId: test
        operationId: getSystemSettingsCribl
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: system
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemSettingsUpgrade
    steps:
      - stepId: test
        operationId: getSystemSettingsUpgrade
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: system
    x-speakeasy-test-rebuild: true
  - workflowId: createSystemSettingsUpgradeByVersion
    steps:
      - stepId: test
        operationId: createSystemSettingsUpgradeByVersion
        parameters:
          - name: version
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: system
    x-speakeasy-test-rebuild: true
  - workflowId: createSystemSettingsUpgradeFromPackage
    steps:
      - stepId: test
        operationId: createSystemSettingsUpgradeFromPackage
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: system
    x-speakeasy-test-rebuild: true
  - workflowId: createOutputClickHouseDescribeTable
    steps:
      - stepId: test
        operationId: createOutputClickHouseDescribeTable
        requestBody:
          contentType: application/json
          payload:
            asyncInserts: true
            database: <value>
            flushPeriodSec: 6320.13
            format: json-each-row
            loadBalanced: true
            mappingType: custom
            tableName: <value>
            url: https://blue-fundraising.name
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: click-house
    x-speakeasy-test-rebuild: true
  - workflowId: getClui
    steps:
      - stepId: test
        operationId: getClui
        parameters:
          - name: query
            in: query
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: clui
    x-speakeasy-test-rebuild: true
  - workflowId: getSummaryWorkers
    steps:
      - stepId: test
        operationId: getSummaryWorkers
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: distributed
    x-speakeasy-test-rebuild: true
  - workflowId: getWorkers
    steps:
      - stepId: test
        operationId: getWorkers
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: distributed
    x-speakeasy-test-rebuild: true
  - workflowId: updateWorkersRestart
    steps:
      - stepId: test
        operationId: updateWorkersRestart
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: distributed
    x-speakeasy-test-rebuild: true
  - workflowId: getConfigBundlesByGroupAndVersion
    steps:
      - stepId: test
        operationId: getConfigBundlesByGroupAndVersion
        parameters:
          - name: group
            in: path
            value: <value>
          - name: version
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/tar+gzip
          - context: $response.body
            condition: |
              "x-file: example.file"
            type: simple
    x-speakeasy-test-group: distributed
    x-speakeasy-test-rebuild: true
  - workflowId: getSummary
    steps:
      - stepId: test
        operationId: getSummary
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: distributed
    x-speakeasy-test-rebuild: true
  - workflowId: createLibExpression
    steps:
      - stepId: test
        operationId: createLibExpression
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: expressions
    x-speakeasy-test-rebuild: true
  - workflowId: listCondition
    steps:
      - stepId: test
        operationId: listCondition
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: conditions
    x-speakeasy-test-rebuild: true
  - workflowId: getConditionById
    steps:
      - stepId: test
        operationId: getConditionById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: conditions
    x-speakeasy-test-rebuild: true
  - workflowId: getDiagBundle
    steps:
      - stepId: test
        operationId: getDiagBundle
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/tar+gzip
          - context: $response.body
            condition: |
              "x-file: example.file"
            type: simple
    x-speakeasy-test-group: diag
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemInfo
    steps:
      - stepId: test
        operationId: getSystemInfo
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: diag
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemDiag
    steps:
      - stepId: test
        operationId: getSystemDiag
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: diag
    x-speakeasy-test-rebuild: true
  - workflowId: deleteSystemDiag
    steps:
      - stepId: test
        operationId: deleteSystemDiag
        parameters:
          - name: path
            in: query
            value: /opt/lib
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: diag
    x-speakeasy-test-rebuild: true
  - workflowId: createSystemDiagSend
    steps:
      - stepId: test
        operationId: createSystemDiagSend
        requestBody:
          contentType: application/json
          payload:
            includeGit: true
            includeInstallLogs: false
            includeMetrics: true
            includeTopTalkers: false
            renameJs: true
            sendToCribl: false
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: diag
    x-speakeasy-test-rebuild: true
  - workflowId: getJobResultsById
    steps:
      - stepId: test
        operationId: getJobResultsById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/x-ndjson
          - context: $response.body
            condition: |
              "x-file: example.file"
            type: simple
    x-speakeasy-test-group: jobs
    x-speakeasy-test-rebuild: true
  - workflowId: updateJobsCancelById
    steps:
      - stepId: test
        operationId: updateJobsCancelById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: jobs
    x-speakeasy-test-rebuild: true
  - workflowId: createJobs
    steps:
      - stepId: test
        operationId: createJobs
        requestBody:
          contentType: application/json
          payload:
            executor:
              storeTaskResults: true
              type: <value>
            ignoreGroupJobsLimit: false
            resumeOnBoot: false
            ttl: 4h
            type: scheduledSearch
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: jobs
    x-speakeasy-test-rebuild: true
  - workflowId: getJobs
    steps:
      - stepId: test
        operationId: getJobs
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: jobs
    x-speakeasy-test-rebuild: true
  - workflowId: deleteJobsById
    steps:
      - stepId: test
        operationId: deleteJobsById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: jobs
    x-speakeasy-test-rebuild: true
  - workflowId: getJobsById
    steps:
      - stepId: test
        operationId: getJobsById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: jobs
    x-speakeasy-test-rebuild: true
  - workflowId: updateJobsKeepById
    steps:
      - stepId: test
        operationId: updateJobsKeepById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: jobs
    x-speakeasy-test-rebuild: true
  - workflowId: updateJobsPauseById
    steps:
      - stepId: test
        operationId: updateJobsPauseById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: jobs
    x-speakeasy-test-rebuild: true
  - workflowId: updateJobsResumeById
    steps:
      - stepId: test
        operationId: updateJobsResumeById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: jobs
    x-speakeasy-test-rebuild: true
  - workflowId: getJobsResultsByIdAndGroup
    steps:
      - stepId: test
        operationId: getJobsResultsByIdAndGroup
        parameters:
          - name: id
            in: path
            value: <id>
          - name: group
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: jobs
    x-speakeasy-test-rebuild: true
  - workflowId: getJobsErrorsByIdAndGroup
    steps:
      - stepId: test
        operationId: getJobsErrorsByIdAndGroup
        parameters:
          - name: id
            in: path
            value: <id>
          - name: group
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: jobs
    x-speakeasy-test-rebuild: true
  - workflowId: getJobsErrorsById
    steps:
      - stepId: test
        operationId: getJobsErrorsById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: jobs
    x-speakeasy-test-rebuild: true
  - workflowId: getSecurityKmsConfig
    steps:
      - stepId: test
        operationId: getSecurityKmsConfig
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: security
    x-speakeasy-test-rebuild: true
  - workflowId: updateSecurityKmsConfig
    steps:
      - stepId: test
        operationId: updateSecurityKmsConfig
        requestBody:
          contentType: application/json
          payload:
            enableHealthCheck: true
            provider: local
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: security
    x-speakeasy-test-rebuild: true
  - workflowId: getSecurityKmsHealth
    steps:
      - stepId: test
        operationId: getSecurityKmsHealth
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: security
    x-speakeasy-test-rebuild: true
  - workflowId: listLicense
    steps:
      - stepId: test
        operationId: listLicense
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: licenses
    x-speakeasy-test-rebuild: true
  - workflowId: createLicense
    steps:
      - stepId: test
        operationId: createLicense
        requestBody:
          contentType: application/json
          payload:
            license: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: licenses
    x-speakeasy-test-rebuild: true
  - workflowId: getLicenseById
    steps:
      - stepId: test
        operationId: getLicenseById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: licenses
    x-speakeasy-test-rebuild: true
  - workflowId: deleteLicenseById
    steps:
      - stepId: test
        operationId: deleteLicenseById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: licenses
    x-speakeasy-test-rebuild: true
  - workflowId: getLicense
    steps:
      - stepId: test
        operationId: getLicense
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: licenses
    x-speakeasy-test-rebuild: true
  - workflowId: listLoggerConfig
    steps:
      - stepId: test
        operationId: listLoggerConfig
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: logger
    x-speakeasy-test-rebuild: true
  - workflowId: getLoggerConfigById
    steps:
      - stepId: test
        operationId: getLoggerConfigById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: logger
    x-speakeasy-test-rebuild: true
  - workflowId: updateLoggerConfigById
    steps:
      - stepId: test
        operationId: updateLoggerConfigById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            channels:
              - id: <id>
                level: <value>
            id: <id>
            limitRate: 1569.58
            maxSizeBytes: 3692.39
            redactFields:
              - <value 1>
              - <value 2>
            redactLabel: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: logger
    x-speakeasy-test-rebuild: true
  - workflowId: deleteLoggerConfigById
    steps:
      - stepId: test
        operationId: deleteLoggerConfigById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: logger
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemJobsLogsByIdAndGroupId
    steps:
      - stepId: test
        operationId: getSystemJobsLogsByIdAndGroupId
        parameters:
          - name: id
            in: path
            value: <id>
          - name: groupId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: logging
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemLogsById
    steps:
      - stepId: test
        operationId: getSystemLogsById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: logging
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemLogs
    steps:
      - stepId: test
        operationId: getSystemLogs
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: logging
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemLogsSearch
    steps:
      - stepId: test
        operationId: getSystemLogsSearch
        parameters:
          - name: type
            in: query
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: logging
    x-speakeasy-test-rebuild: true
  - workflowId: createPacks
    steps:
      - stepId: test
        operationId: createPacks
        requestBody:
          contentType: application/json
          payload:
            id: <id>
            source: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: packs
    x-speakeasy-test-rebuild: true
  - workflowId: getPacks
    steps:
      - stepId: test
        operationId: getPacks
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: packs
    x-speakeasy-test-rebuild: true
  - workflowId: updatePacks
    steps:
      - stepId: test
        operationId: updatePacks
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: packs
    x-speakeasy-test-rebuild: true
  - workflowId: deletePacksById
    steps:
      - stepId: test
        operationId: deletePacksById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: packs
    x-speakeasy-test-rebuild: true
  - workflowId: updatePacksById
    steps:
      - stepId: test
        operationId: updatePacksById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: packs
    x-speakeasy-test-rebuild: true
  - workflowId: createPacksClone
    steps:
      - stepId: test
        operationId: createPacksClone
        requestBody:
          contentType: application/json
          payload:
            dstGroups:
              - <value 1>
              - <value 2>
            packs:
              - <value 1>
              - <value 2>
            srcGroup: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: packs
    x-speakeasy-test-rebuild: true
  - workflowId: getPacksRefsById
    steps:
      - stepId: test
        operationId: getPacksRefsById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: packs
    x-speakeasy-test-rebuild: true
  - workflowId: getPacksExportById
    steps:
      - stepId: test
        operationId: getPacksExportById
        parameters:
          - name: id
            in: path
            value: <id>
          - name: mode
            in: query
            value: default_only
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: packs
    x-speakeasy-test-rebuild: true
  - workflowId: createPacksPublishById
    steps:
      - stepId: test
        operationId: createPacksPublishById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: packs
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemProcesses
    steps:
      - stepId: test
        operationId: getSystemProcesses
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: processes
    x-speakeasy-test-rebuild: true
  - workflowId: createSystemMetricsEnum
    steps:
      - stepId: test
        operationId: createSystemMetricsEnum
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: metrics
    x-speakeasy-test-rebuild: true
  - workflowId: getSystemMetrics
    steps:
      - stepId: test
        operationId: getSystemMetrics
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: metrics
    x-speakeasy-test-rebuild: true
  - workflowId: createSystemMetricsQuery
    steps:
      - stepId: test
        operationId: createSystemMetricsQuery
        requestBody:
          contentType: application/json
          payload:
            aggs:
              aggregations: []
              cumulative: false
              flushEventLimit: 9835.34
              flushMemLimit: 7220.64
              hostname: handy-kielbasa.info
              metricsMode: false
              sufficientStatsOnly: true
              timeWindowSeconds: 7794.15
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: metrics
    x-speakeasy-test-rebuild: true
  - workflowId: getUiByKey
    steps:
      - stepId: test
        operationId: getUiByKey
        parameters:
          - name: key
            in: path
            value: <key>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: uiState
    x-speakeasy-test-rebuild: true
  - workflowId: updateUiByKey
    steps:
      - stepId: test
        operationId: updateUiByKey
        parameters:
          - name: key
            in: path
            value: <key>
        requestBody:
          contentType: application/json
          payload:
            op: push-recent
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: uiState
    x-speakeasy-test-rebuild: true
  - workflowId: getAiSettingsFeaturesByFeature
    steps:
      - stepId: test
        operationId: getAiSettingsFeaturesByFeature
        parameters:
          - name: feature
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: ai-settings
    x-speakeasy-test-rebuild: true
  - workflowId: createAiSettingsFeaturesByFeature
    steps:
      - stepId: test
        operationId: createAiSettingsFeaturesByFeature
        parameters:
          - name: feature
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: ai-settings
    x-speakeasy-test-rebuild: true
  - workflowId: getAiSettingsFeatures
    steps:
      - stepId: test
        operationId: getAiSettingsFeatures
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: ai-settings
    x-speakeasy-test-rebuild: true
  - workflowId: createAiSettingsFeatures
    steps:
      - stepId: test
        operationId: createAiSettingsFeatures
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: ai-settings
    x-speakeasy-test-rebuild: true
  - workflowId: getAiConsent
    steps:
      - stepId: test
        operationId: getAiConsent
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: consent
    x-speakeasy-test-rebuild: true
  - workflowId: createAiConsent
    steps:
      - stepId: test
        operationId: createAiConsent
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: consent
    x-speakeasy-test-rebuild: true
  - workflowId: getSearchQuery
    steps:
      - stepId: test
        operationId: getSearchQuery
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: query
    x-speakeasy-test-rebuild: true
  - workflowId: listTrustPolicy
    steps:
      - stepId: test
        operationId: listTrustPolicy
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: trust-policies
    x-speakeasy-test-rebuild: true
  - workflowId: listFunction
    steps:
      - stepId: test
        operationId: listFunction
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: functions
    x-speakeasy-test-rebuild: true
  - workflowId: getFunctionById
    steps:
      - stepId: test
        operationId: getFunctionById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: functions
    x-speakeasy-test-rebuild: true
  - workflowId: getFunctionByPack
    steps:
      - stepId: test
        operationId: getFunctionByPack
        parameters:
          - name: pack
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: functions
    x-speakeasy-test-rebuild: true
  - workflowId: getFunctionByPackAndId
    steps:
      - stepId: test
        operationId: getFunctionByPackAndId
        parameters:
          - name: id
            in: path
            value: <id>
          - name: pack
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: functions
    x-speakeasy-test-rebuild: true
  - workflowId: listCollector
    steps:
      - stepId: test
        operationId: listCollector
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: collectors
    x-speakeasy-test-rebuild: true
  - workflowId: getCollectorById
    steps:
      - stepId: test
        operationId: getCollectorById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: collectors
    x-speakeasy-test-rebuild: true
  - workflowId: listExecutor
    steps:
      - stepId: test
        operationId: listExecutor
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: executors
    x-speakeasy-test-rebuild: true
  - workflowId: getExecutorById
    steps:
      - stepId: test
        operationId: getExecutorById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: executors
    x-speakeasy-test-rebuild: true
  - workflowId: getGroupsConfigVersionById
    steps:
      - stepId: test
        operationId: getGroupsConfigVersionById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: groups
    x-speakeasy-test-rebuild: true
  - workflowId: createProductsGroupsByProduct
    steps:
      - stepId: test
        operationId: createProductsGroupsByProduct
        parameters:
          - name: product
            in: path
            value: stream
        requestBody:
          contentType: application/json
          payload:
            configVersion: <value>
            id: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: groups
    x-speakeasy-test-rebuild: true
  - workflowId: getProductsGroupsByProduct
    steps:
      - stepId: test
        operationId: getProductsGroupsByProduct
        parameters:
          - name: product
            in: path
            value: stream
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: groups
    x-speakeasy-test-rebuild: true
  - workflowId: updateGroupsDeployById
    steps:
      - stepId: test
        operationId: updateGroupsDeployById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: groups
    x-speakeasy-test-rebuild: true
  - workflowId: getGroupsById
    steps:
      - stepId: test
        operationId: getGroupsById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: groups
    x-speakeasy-test-rebuild: true
